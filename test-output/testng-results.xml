<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="3" total="53" passed="16" failed="24" skipped="10">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-12-15T17:56:52Z" name="APIM Tests" finished-at="2022-12-15T18:09:35Z" duration-ms="763059">
    <groups>
    </groups>
    <test started-at="2022-12-15T17:56:52Z" name="IICS_Login" finished-at="2022-12-15T17:57:27Z" duration-ms="34970">
      <class name="com.informatica.tests.LoginTest">
        <test-method is-config="true" signature="init()[pri:0, instance:com.informatica.tests.LoginTest@4f0100a7]" started-at="2022-12-15T17:56:52Z" name="init" finished-at="2022-12-15T17:57:18Z" duration-ms="26596" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method is-config="true" signature="register(java.lang.reflect.Method)[pri:0, instance:com.informatica.tests.LoginTest@4f0100a7]" started-at="2022-12-15T17:57:18Z" name="register" finished-at="2022-12-15T17:57:18Z" duration-ms="18" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.informatica.tests.LoginTest.validateIICSLogin(java.lang.Object)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- register -->
        <test-method signature="validateIICSLogin(java.lang.Object)[pri:1, instance:com.informatica.tests.LoginTest@4f0100a7]" started-at="2022-12-15T17:57:18Z" name="validateIICSLogin" data-provider="getData" finished-at="2022-12-15T17:57:20Z" duration-ms="2218" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Additional Details=Processname=Employee,GroupName=grp1, TestMethodName=validateIICSLogin, Description=Test case to validate user logged into IICS, IsRun=Yes, JIRA_KEY=-}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateIICSLogin -->
        <test-method is-config="true" signature="captureStatus(org.testng.ITestResult)[pri:0, instance:com.informatica.tests.LoginTest@4f0100a7]" started-at="2022-12-15T17:57:20Z" name="captureStatus" finished-at="2022-12-15T17:57:20Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateIICSLogin status=SUCCESS method=LoginTest.validateIICSLogin(java.lang.Object)[pri:1, instance:com.informatica.tests.LoginTest@4f0100a7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureStatus -->
        <test-method is-config="true" signature="register(java.lang.reflect.Method)[pri:0, instance:com.informatica.tests.LoginTest@4f0100a7]" started-at="2022-12-15T17:57:20Z" name="register" finished-at="2022-12-15T17:57:20Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.informatica.tests.LoginTest.valdiateAPIMChiklet()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- register -->
        <test-method signature="valdiateAPIMChiklet()[pri:2, instance:com.informatica.tests.LoginTest@4f0100a7]" started-at="2022-12-15T17:57:20Z" name="valdiateAPIMChiklet" finished-at="2022-12-15T17:57:24Z" duration-ms="3238" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- valdiateAPIMChiklet -->
        <test-method is-config="true" signature="captureStatus(org.testng.ITestResult)[pri:0, instance:com.informatica.tests.LoginTest@4f0100a7]" started-at="2022-12-15T17:57:24Z" name="captureStatus" finished-at="2022-12-15T17:57:24Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=valdiateAPIMChiklet status=SUCCESS method=LoginTest.valdiateAPIMChiklet()[pri:2, instance:com.informatica.tests.LoginTest@4f0100a7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureStatus -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.informatica.tests.LoginTest@4f0100a7]" started-at="2022-12-15T17:57:24Z" name="tearDown" finished-at="2022-12-15T17:57:27Z" duration-ms="2796" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.informatica.tests.LoginTest -->
    </test> <!-- IICS_Login -->
    <test started-at="2022-12-15T17:56:52Z" name="API_Groups" finished-at="2022-12-15T17:58:26Z" duration-ms="94270">
      <class name="com.informatica.tests.APIGroupsTest">
        <test-method is-config="true" signature="init()[pri:0, instance:com.informatica.tests.APIGroupsTest@1608bcbd]" started-at="2022-12-15T17:56:52Z" name="init" finished-at="2022-12-15T17:58:25Z" duration-ms="93029" status="FAIL">
          <exception class="com.microsoft.playwright.TimeoutError">
            <message>
              <![CDATA[Timeout 60000ms exceeded]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.microsoft.playwright.TimeoutError: Timeout 60000ms exceeded
at com.microsoft.playwright.impl.WaitableTimeout.get(WaitableTimeout.java:41)
at com.microsoft.playwright.impl.WaitableRace.get(WaitableRace.java:44)
at com.microsoft.playwright.impl.ChannelOwner.runUntil(ChannelOwner.java:103)
at com.microsoft.playwright.impl.FrameImpl.waitForLoadStateImpl(FrameImpl.java:825)
at com.microsoft.playwright.impl.FrameImpl.waitForLoadStateImpl(FrameImpl.java:810)
at com.microsoft.playwright.impl.PageImpl.lambda$waitForLoadState$69(PageImpl.java:1260)
at com.microsoft.playwright.impl.WaitForEventLogger.get(WaitForEventLogger.java:46)
at com.microsoft.playwright.impl.ChannelOwner.withWaitLogging(ChannelOwner.java:72)
at com.microsoft.playwright.impl.PageImpl.waitForLoadState(PageImpl.java:1259)
at com.microsoft.playwright.Page.waitForLoadState(Page.java:6025)
at com.informatica.pages.LoginPage.ClickonAPIMChiklet(LoginPage.java:50)
at com.informatica.tests.APIGroupsTest.init(APIGroupsTest.java:39)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:458)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
at org.testng.TestRunner.beforeRun(TestRunner.java:529)
at org.testng.TestRunner.run(TestRunner.java:497)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- com.microsoft.playwright.TimeoutError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method is-config="true" signature="register(java.lang.reflect.Method)[pri:0, instance:com.informatica.tests.APIGroupsTest@1608bcbd]" started-at="2022-12-15T17:58:25Z" name="register" finished-at="2022-12-15T17:58:25Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.informatica.tests.APIGroupsTest.validateUserNavigatedtoAPiGroups()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- register -->
        <test-method signature="validateUserNavigatedtoAPiGroups()[pri:1, instance:com.informatica.tests.APIGroupsTest@1608bcbd]" started-at="2022-12-15T17:58:25Z" name="validateUserNavigatedtoAPiGroups" finished-at="2022-12-15T17:58:25Z" duration-ms="0" status="SKIP">
          <exception class="com.microsoft.playwright.TimeoutError">
            <message>
              <![CDATA[Timeout 60000ms exceeded]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.microsoft.playwright.TimeoutError: Timeout 60000ms exceeded
at com.microsoft.playwright.impl.WaitableTimeout.get(WaitableTimeout.java:41)
at com.microsoft.playwright.impl.WaitableRace.get(WaitableRace.java:44)
at com.microsoft.playwright.impl.ChannelOwner.runUntil(ChannelOwner.java:103)
at com.microsoft.playwright.impl.FrameImpl.waitForLoadStateImpl(FrameImpl.java:825)
at com.microsoft.playwright.impl.FrameImpl.waitForLoadStateImpl(FrameImpl.java:810)
at com.microsoft.playwright.impl.PageImpl.lambda$waitForLoadState$69(PageImpl.java:1260)
at com.microsoft.playwright.impl.WaitForEventLogger.get(WaitForEventLogger.java:46)
at com.microsoft.playwright.impl.ChannelOwner.withWaitLogging(ChannelOwner.java:72)
at com.microsoft.playwright.impl.PageImpl.waitForLoadState(PageImpl.java:1259)
at com.microsoft.playwright.Page.waitForLoadState(Page.java:6025)
at com.informatica.pages.LoginPage.ClickonAPIMChiklet(LoginPage.java:50)
at com.informatica.tests.APIGroupsTest.init(APIGroupsTest.java:39)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:458)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
at org.testng.TestRunner.beforeRun(TestRunner.java:529)
at org.testng.TestRunner.run(TestRunner.java:497)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- com.microsoft.playwright.TimeoutError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateUserNavigatedtoAPiGroups -->
        <test-method is-config="true" signature="captureStatus(org.testng.ITestResult)[pri:0, instance:com.informatica.tests.APIGroupsTest@1608bcbd]" started-at="2022-12-15T17:58:25Z" name="captureStatus" finished-at="2022-12-15T17:58:25Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=APIGroupsTest.validateUserNavigatedtoAPiGroups()[pri:1, instance:com.informatica.tests.APIGroupsTest@1608bcbd] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureStatus -->
        <test-method is-config="true" signature="register(java.lang.reflect.Method)[pri:0, instance:com.informatica.tests.APIGroupsTest@1608bcbd]" started-at="2022-12-15T17:58:25Z" name="register" finished-at="2022-12-15T17:58:25Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.informatica.tests.APIGroupsTest.ValidateHeadersAPiGroups()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- register -->
        <test-method signature="ValidateHeadersAPiGroups()[pri:2, instance:com.informatica.tests.APIGroupsTest@1608bcbd]" started-at="2022-12-15T17:58:25Z" name="ValidateHeadersAPiGroups" finished-at="2022-12-15T17:58:25Z" duration-ms="0" status="SKIP">
          <exception class="com.microsoft.playwright.TimeoutError">
            <message>
              <![CDATA[Timeout 60000ms exceeded]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.microsoft.playwright.TimeoutError: Timeout 60000ms exceeded
at com.microsoft.playwright.impl.WaitableTimeout.get(WaitableTimeout.java:41)
at com.microsoft.playwright.impl.WaitableRace.get(WaitableRace.java:44)
at com.microsoft.playwright.impl.ChannelOwner.runUntil(ChannelOwner.java:103)
at com.microsoft.playwright.impl.FrameImpl.waitForLoadStateImpl(FrameImpl.java:825)
at com.microsoft.playwright.impl.FrameImpl.waitForLoadStateImpl(FrameImpl.java:810)
at com.microsoft.playwright.impl.PageImpl.lambda$waitForLoadState$69(PageImpl.java:1260)
at com.microsoft.playwright.impl.WaitForEventLogger.get(WaitForEventLogger.java:46)
at com.microsoft.playwright.impl.ChannelOwner.withWaitLogging(ChannelOwner.java:72)
at com.microsoft.playwright.impl.PageImpl.waitForLoadState(PageImpl.java:1259)
at com.microsoft.playwright.Page.waitForLoadState(Page.java:6025)
at com.informatica.pages.LoginPage.ClickonAPIMChiklet(LoginPage.java:50)
at com.informatica.tests.APIGroupsTest.init(APIGroupsTest.java:39)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:458)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
at org.testng.TestRunner.beforeRun(TestRunner.java:529)
at org.testng.TestRunner.run(TestRunner.java:497)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- com.microsoft.playwright.TimeoutError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateHeadersAPiGroups -->
        <test-method is-config="true" signature="captureStatus(org.testng.ITestResult)[pri:0, instance:com.informatica.tests.APIGroupsTest@1608bcbd]" started-at="2022-12-15T17:58:25Z" name="captureStatus" finished-at="2022-12-15T17:58:25Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=APIGroupsTest.ValidateHeadersAPiGroups()[pri:2, instance:com.informatica.tests.APIGroupsTest@1608bcbd] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureStatus -->
        <test-method is-config="true" signature="register(java.lang.reflect.Method)[pri:0, instance:com.informatica.tests.APIGroupsTest@1608bcbd]" started-at="2022-12-15T17:58:25Z" name="register" finished-at="2022-12-15T17:58:25Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.informatica.tests.APIGroupsTest.validateCreateAPIGroupWithContext(java.lang.Object)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- register -->
        <test-method signature="validateCreateAPIGroupWithContext(java.lang.Object)[pri:7, instance:com.informatica.tests.APIGroupsTest@1608bcbd]" started-at="2022-12-15T17:58:25Z" name="validateCreateAPIGroupWithContext" data-provider="getData" finished-at="2022-12-15T17:58:25Z" duration-ms="0" status="SKIP">
          <exception class="com.microsoft.playwright.TimeoutError">
            <message>
              <![CDATA[Timeout 60000ms exceeded]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.microsoft.playwright.TimeoutError: Timeout 60000ms exceeded
at com.microsoft.playwright.impl.WaitableTimeout.get(WaitableTimeout.java:41)
at com.microsoft.playwright.impl.WaitableRace.get(WaitableRace.java:44)
at com.microsoft.playwright.impl.ChannelOwner.runUntil(ChannelOwner.java:103)
at com.microsoft.playwright.impl.FrameImpl.waitForLoadStateImpl(FrameImpl.java:825)
at com.microsoft.playwright.impl.FrameImpl.waitForLoadStateImpl(FrameImpl.java:810)
at com.microsoft.playwright.impl.PageImpl.lambda$waitForLoadState$69(PageImpl.java:1260)
at com.microsoft.playwright.impl.WaitForEventLogger.get(WaitForEventLogger.java:46)
at com.microsoft.playwright.impl.ChannelOwner.withWaitLogging(ChannelOwner.java:72)
at com.microsoft.playwright.impl.PageImpl.waitForLoadState(PageImpl.java:1259)
at com.microsoft.playwright.Page.waitForLoadState(Page.java:6025)
at com.informatica.pages.LoginPage.ClickonAPIMChiklet(LoginPage.java:50)
at com.informatica.tests.APIGroupsTest.init(APIGroupsTest.java:39)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:458)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
at org.testng.TestRunner.beforeRun(TestRunner.java:529)
at org.testng.TestRunner.run(TestRunner.java:497)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- com.microsoft.playwright.TimeoutError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateCreateAPIGroupWithContext -->
        <test-method is-config="true" signature="captureStatus(org.testng.ITestResult)[pri:0, instance:com.informatica.tests.APIGroupsTest@1608bcbd]" started-at="2022-12-15T17:58:25Z" name="captureStatus" finished-at="2022-12-15T17:58:25Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=APIGroupsTest.validateCreateAPIGroupWithContext(java.lang.Object)[pri:7, instance:com.informatica.tests.APIGroupsTest@1608bcbd] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureStatus -->
        <test-method is-config="true" signature="register(java.lang.reflect.Method)[pri:0, instance:com.informatica.tests.APIGroupsTest@1608bcbd]" started-at="2022-12-15T17:58:25Z" name="register" finished-at="2022-12-15T17:58:25Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.informatica.tests.APIGroupsTest.validateCreateAPIGroupWithOutContext(java.lang.Object)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- register -->
        <test-method is-config="true" signature="captureStatus(org.testng.ITestResult)[pri:0, instance:com.informatica.tests.APIGroupsTest@1608bcbd]" started-at="2022-12-15T17:58:25Z" name="captureStatus" finished-at="2022-12-15T17:58:25Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=APIGroupsTest.validateCreateAPIGroupWithOutContext(java.lang.Object)[pri:8, instance:com.informatica.tests.APIGroupsTest@1608bcbd] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureStatus -->
        <test-method signature="validateCreateAPIGroupWithOutContext(java.lang.Object)[pri:8, instance:com.informatica.tests.APIGroupsTest@1608bcbd]" started-at="2022-12-15T17:58:25Z" name="validateCreateAPIGroupWithOutContext" data-provider="getData" finished-at="2022-12-15T17:58:25Z" duration-ms="0" status="SKIP">
          <exception class="com.microsoft.playwright.TimeoutError">
            <message>
              <![CDATA[Timeout 60000ms exceeded]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.microsoft.playwright.TimeoutError: Timeout 60000ms exceeded
at com.microsoft.playwright.impl.WaitableTimeout.get(WaitableTimeout.java:41)
at com.microsoft.playwright.impl.WaitableRace.get(WaitableRace.java:44)
at com.microsoft.playwright.impl.ChannelOwner.runUntil(ChannelOwner.java:103)
at com.microsoft.playwright.impl.FrameImpl.waitForLoadStateImpl(FrameImpl.java:825)
at com.microsoft.playwright.impl.FrameImpl.waitForLoadStateImpl(FrameImpl.java:810)
at com.microsoft.playwright.impl.PageImpl.lambda$waitForLoadState$69(PageImpl.java:1260)
at com.microsoft.playwright.impl.WaitForEventLogger.get(WaitForEventLogger.java:46)
at com.microsoft.playwright.impl.ChannelOwner.withWaitLogging(ChannelOwner.java:72)
at com.microsoft.playwright.impl.PageImpl.waitForLoadState(PageImpl.java:1259)
at com.microsoft.playwright.Page.waitForLoadState(Page.java:6025)
at com.informatica.pages.LoginPage.ClickonAPIMChiklet(LoginPage.java:50)
at com.informatica.tests.APIGroupsTest.init(APIGroupsTest.java:39)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:458)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
at org.testng.TestRunner.beforeRun(TestRunner.java:529)
at org.testng.TestRunner.run(TestRunner.java:497)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- com.microsoft.playwright.TimeoutError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateCreateAPIGroupWithOutContext -->
        <test-method signature="validateRenameAPIGroup(java.lang.Object)[pri:9, instance:com.informatica.tests.APIGroupsTest@1608bcbd]" started-at="2022-12-15T17:58:25Z" name="validateRenameAPIGroup" data-provider="getData" finished-at="2022-12-15T17:58:25Z" depends-on-methods="com.informatica.tests.APIGroupsTest.validateCreateAPIGroupWithContext" duration-ms="0" status="SKIP">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method APIGroupsTest.validateRenameAPIGroup(java.lang.Object)[pri:9, instance:com.informatica.tests.APIGroupsTest@1608bcbd] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method APIGroupsTest.validateRenameAPIGroup(java.lang.Object)[pri:9, instance:com.informatica.tests.APIGroupsTest@1608bcbd] depends on not successfully finished methods
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:888)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateRenameAPIGroup -->
        <test-method signature="validateRemoveAPIGroup(java.lang.Object)[pri:10, instance:com.informatica.tests.APIGroupsTest@1608bcbd]" started-at="2022-12-15T17:58:25Z" name="validateRemoveAPIGroup" data-provider="getData" finished-at="2022-12-15T17:58:25Z" depends-on-methods="com.informatica.tests.APIGroupsTest.validateCreateAPIGroupWithContext" duration-ms="0" status="SKIP">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method APIGroupsTest.validateRemoveAPIGroup(java.lang.Object)[pri:10, instance:com.informatica.tests.APIGroupsTest@1608bcbd] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method APIGroupsTest.validateRemoveAPIGroup(java.lang.Object)[pri:10, instance:com.informatica.tests.APIGroupsTest@1608bcbd] depends on not successfully finished methods
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:888)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateRemoveAPIGroup -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.informatica.tests.APIGroupsTest@1608bcbd]" started-at="2022-12-15T17:58:25Z" name="tearDown" finished-at="2022-12-15T17:58:26Z" duration-ms="1222" status="FAIL">
          <exception class="com.microsoft.playwright.PlaywrightException">
            <message>
              <![CDATA[Failed to read message from driver, pipe closed.]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.microsoft.playwright.PlaywrightException: Failed to read message from driver, pipe closed.
at com.microsoft.playwright.impl.PipeTransport.poll(PipeTransport.java:75)
at com.microsoft.playwright.impl.Connection.processOneMessage(Connection.java:157)
at com.microsoft.playwright.impl.ChannelOwner.runUntil(ChannelOwner.java:101)
at com.microsoft.playwright.impl.Connection.sendMessage(Connection.java:105)
at com.microsoft.playwright.impl.ChannelOwner.sendMessage(ChannelOwner.java:94)
at com.microsoft.playwright.impl.ChannelOwner.sendMessage(ChannelOwner.java:90)
at com.microsoft.playwright.impl.BrowserContextImpl.closeImpl(BrowserContextImpl.java:196)
at com.microsoft.playwright.impl.BrowserContextImpl.lambda$close$1(BrowserContextImpl.java:170)
at com.microsoft.playwright.impl.LoggingSupport.lambda$withLogging$0(LoggingSupport.java:36)
at com.microsoft.playwright.impl.LoggingSupport.withLogging(LoggingSupport.java:47)
at com.microsoft.playwright.impl.ChannelOwner.withLogging(ChannelOwner.java:79)
at com.microsoft.playwright.impl.LoggingSupport.withLogging(LoggingSupport.java:35)
at com.microsoft.playwright.impl.BrowserContextImpl.close(BrowserContextImpl.java:170)
at com.informatica.tests.BaseTest.tearDown(BaseTest.java:294)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:458)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
at org.testng.TestRunner.afterRun(TestRunner.java:725)
at org.testng.TestRunner.run(TestRunner.java:509)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.io.EOFException
at com.microsoft.playwright.impl.ReaderThread.readIntLE(PipeTransport.java:110)
at com.microsoft.playwright.impl.ReaderThread.readMessage(PipeTransport.java:139)
at com.microsoft.playwright.impl.ReaderThread.run(PipeTransport.java:125)
]]>
            </full-stacktrace>
          </exception> <!-- com.microsoft.playwright.PlaywrightException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.informatica.tests.APIGroupsTest -->
    </test> <!-- API_Groups -->
    <test started-at="2022-12-15T17:56:52Z" name="API_Portal_Registry" finished-at="2022-12-15T17:58:26Z" duration-ms="94795">
      <class name="com.informatica.tests.APIPortalRegistryTest">
        <test-method is-config="true" signature="init()[pri:0, instance:com.informatica.tests.APIPortalRegistryTest@52c3cb31]" started-at="2022-12-15T17:56:52Z" name="init" finished-at="2022-12-15T17:58:25Z" duration-ms="93896" status="FAIL">
          <exception class="com.microsoft.playwright.TimeoutError">
            <message>
              <![CDATA[Timeout 60000ms exceeded]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.microsoft.playwright.TimeoutError: Timeout 60000ms exceeded
at com.microsoft.playwright.impl.WaitableTimeout.get(WaitableTimeout.java:41)
at com.microsoft.playwright.impl.WaitableRace.get(WaitableRace.java:44)
at com.microsoft.playwright.impl.ChannelOwner.runUntil(ChannelOwner.java:103)
at com.microsoft.playwright.impl.FrameImpl.waitForLoadStateImpl(FrameImpl.java:825)
at com.microsoft.playwright.impl.FrameImpl.waitForLoadStateImpl(FrameImpl.java:810)
at com.microsoft.playwright.impl.PageImpl.lambda$waitForLoadState$69(PageImpl.java:1260)
at com.microsoft.playwright.impl.WaitForEventLogger.get(WaitForEventLogger.java:46)
at com.microsoft.playwright.impl.ChannelOwner.withWaitLogging(ChannelOwner.java:72)
at com.microsoft.playwright.impl.PageImpl.waitForLoadState(PageImpl.java:1259)
at com.microsoft.playwright.Page.waitForLoadState(Page.java:6025)
at com.informatica.pages.LoginPage.clickOnApiChiklet(LoginPage.java:64)
at com.informatica.tests.APIPortalRegistryTest.init(APIPortalRegistryTest.java:47)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:458)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
at org.testng.TestRunner.beforeRun(TestRunner.java:529)
at org.testng.TestRunner.run(TestRunner.java:497)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- com.microsoft.playwright.TimeoutError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method is-config="true" signature="captureStatus(org.testng.ITestResult)[pri:0, instance:com.informatica.tests.APIPortalRegistryTest@52c3cb31]" started-at="2022-12-15T17:58:25Z" name="captureStatus" finished-at="2022-12-15T17:58:25Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=APIPortalRegistryTest.ValidateSwaggerTab(java.lang.Object)[pri:1, instance:com.informatica.tests.APIPortalRegistryTest@52c3cb31] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureStatus -->
        <test-method signature="ValidateSwaggerTab(java.lang.Object)[pri:1, instance:com.informatica.tests.APIPortalRegistryTest@52c3cb31]" started-at="2022-12-15T17:58:25Z" name="ValidateSwaggerTab" data-provider="getData" finished-at="2022-12-15T17:58:25Z" duration-ms="0" status="SKIP">
          <exception class="com.microsoft.playwright.TimeoutError">
            <message>
              <![CDATA[Timeout 60000ms exceeded]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.microsoft.playwright.TimeoutError: Timeout 60000ms exceeded
at com.microsoft.playwright.impl.WaitableTimeout.get(WaitableTimeout.java:41)
at com.microsoft.playwright.impl.WaitableRace.get(WaitableRace.java:44)
at com.microsoft.playwright.impl.ChannelOwner.runUntil(ChannelOwner.java:103)
at com.microsoft.playwright.impl.FrameImpl.waitForLoadStateImpl(FrameImpl.java:825)
at com.microsoft.playwright.impl.FrameImpl.waitForLoadStateImpl(FrameImpl.java:810)
at com.microsoft.playwright.impl.PageImpl.lambda$waitForLoadState$69(PageImpl.java:1260)
at com.microsoft.playwright.impl.WaitForEventLogger.get(WaitForEventLogger.java:46)
at com.microsoft.playwright.impl.ChannelOwner.withWaitLogging(ChannelOwner.java:72)
at com.microsoft.playwright.impl.PageImpl.waitForLoadState(PageImpl.java:1259)
at com.microsoft.playwright.Page.waitForLoadState(Page.java:6025)
at com.informatica.pages.LoginPage.clickOnApiChiklet(LoginPage.java:64)
at com.informatica.tests.APIPortalRegistryTest.init(APIPortalRegistryTest.java:47)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:458)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
at org.testng.TestRunner.beforeRun(TestRunner.java:529)
at org.testng.TestRunner.run(TestRunner.java:497)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- com.microsoft.playwright.TimeoutError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateSwaggerTab -->
        <test-method is-config="true" signature="register(java.lang.reflect.Method)[pri:0, instance:com.informatica.tests.APIPortalRegistryTest@52c3cb31]" started-at="2022-12-15T17:58:25Z" name="register" finished-at="2022-12-15T17:58:25Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.informatica.tests.APIPortalRegistryTest.ValidateSwaggerTab(java.lang.Object) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- register -->
        <test-method is-config="true" signature="register(java.lang.reflect.Method)[pri:0, instance:com.informatica.tests.APIPortalRegistryTest@52c3cb31]" started-at="2022-12-15T17:58:25Z" name="register" finished-at="2022-12-15T17:58:25Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.informatica.tests.APIPortalRegistryTest.run_anonymous_Managed_API(java.lang.Object) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- register -->
        <test-method signature="validateSwaggerURLinAPIPortal(java.lang.Object)[pri:3, instance:com.informatica.tests.APIPortalRegistryTest@52c3cb31]" started-at="2022-12-15T17:58:25Z" name="validateSwaggerURLinAPIPortal" data-provider="getData" finished-at="2022-12-15T17:58:25Z" duration-ms="0" status="SKIP">
          <exception class="com.microsoft.playwright.TimeoutError">
            <message>
              <![CDATA[Timeout 60000ms exceeded]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.microsoft.playwright.TimeoutError: Timeout 60000ms exceeded
at com.microsoft.playwright.impl.WaitableTimeout.get(WaitableTimeout.java:41)
at com.microsoft.playwright.impl.WaitableRace.get(WaitableRace.java:44)
at com.microsoft.playwright.impl.ChannelOwner.runUntil(ChannelOwner.java:103)
at com.microsoft.playwright.impl.FrameImpl.waitForLoadStateImpl(FrameImpl.java:825)
at com.microsoft.playwright.impl.FrameImpl.waitForLoadStateImpl(FrameImpl.java:810)
at com.microsoft.playwright.impl.PageImpl.lambda$waitForLoadState$69(PageImpl.java:1260)
at com.microsoft.playwright.impl.WaitForEventLogger.get(WaitForEventLogger.java:46)
at com.microsoft.playwright.impl.ChannelOwner.withWaitLogging(ChannelOwner.java:72)
at com.microsoft.playwright.impl.PageImpl.waitForLoadState(PageImpl.java:1259)
at com.microsoft.playwright.Page.waitForLoadState(Page.java:6025)
at com.informatica.pages.LoginPage.clickOnApiChiklet(LoginPage.java:64)
at com.informatica.tests.APIPortalRegistryTest.init(APIPortalRegistryTest.java:47)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:458)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
at org.testng.TestRunner.beforeRun(TestRunner.java:529)
at org.testng.TestRunner.run(TestRunner.java:497)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- com.microsoft.playwright.TimeoutError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateSwaggerURLinAPIPortal -->
        <test-method signature="run_anonymous_Managed_API(java.lang.Object)[pri:2, instance:com.informatica.tests.APIPortalRegistryTest@52c3cb31]" started-at="2022-12-15T17:58:25Z" name="run_anonymous_Managed_API" data-provider="getData" finished-at="2022-12-15T17:58:25Z" duration-ms="0" status="SKIP">
          <exception class="com.microsoft.playwright.TimeoutError">
            <message>
              <![CDATA[Timeout 60000ms exceeded]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.microsoft.playwright.TimeoutError: Timeout 60000ms exceeded
at com.microsoft.playwright.impl.WaitableTimeout.get(WaitableTimeout.java:41)
at com.microsoft.playwright.impl.WaitableRace.get(WaitableRace.java:44)
at com.microsoft.playwright.impl.ChannelOwner.runUntil(ChannelOwner.java:103)
at com.microsoft.playwright.impl.FrameImpl.waitForLoadStateImpl(FrameImpl.java:825)
at com.microsoft.playwright.impl.FrameImpl.waitForLoadStateImpl(FrameImpl.java:810)
at com.microsoft.playwright.impl.PageImpl.lambda$waitForLoadState$69(PageImpl.java:1260)
at com.microsoft.playwright.impl.WaitForEventLogger.get(WaitForEventLogger.java:46)
at com.microsoft.playwright.impl.ChannelOwner.withWaitLogging(ChannelOwner.java:72)
at com.microsoft.playwright.impl.PageImpl.waitForLoadState(PageImpl.java:1259)
at com.microsoft.playwright.Page.waitForLoadState(Page.java:6025)
at com.informatica.pages.LoginPage.clickOnApiChiklet(LoginPage.java:64)
at com.informatica.tests.APIPortalRegistryTest.init(APIPortalRegistryTest.java:47)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:458)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
at org.testng.TestRunner.beforeRun(TestRunner.java:529)
at org.testng.TestRunner.run(TestRunner.java:497)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- com.microsoft.playwright.TimeoutError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- run_anonymous_Managed_API -->
        <test-method is-config="true" signature="register(java.lang.reflect.Method)[pri:0, instance:com.informatica.tests.APIPortalRegistryTest@52c3cb31]" started-at="2022-12-15T17:58:25Z" name="register" finished-at="2022-12-15T17:58:25Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.informatica.tests.APIPortalRegistryTest.validateSwaggerURLinAPIPortal(java.lang.Object)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- register -->
        <test-method is-config="true" signature="captureStatus(org.testng.ITestResult)[pri:0, instance:com.informatica.tests.APIPortalRegistryTest@52c3cb31]" started-at="2022-12-15T17:58:25Z" name="captureStatus" finished-at="2022-12-15T17:58:25Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=APIPortalRegistryTest.run_anonymous_Managed_API(java.lang.Object)[pri:2, instance:com.informatica.tests.APIPortalRegistryTest@52c3cb31] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureStatus -->
        <test-method is-config="true" signature="captureStatus(org.testng.ITestResult)[pri:0, instance:com.informatica.tests.APIPortalRegistryTest@52c3cb31]" started-at="2022-12-15T17:58:25Z" name="captureStatus" finished-at="2022-12-15T17:58:25Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=APIPortalRegistryTest.validateSwaggerURLinAPIPortal(java.lang.Object)[pri:3, instance:com.informatica.tests.APIPortalRegistryTest@52c3cb31] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureStatus -->
        <test-method is-config="true" signature="captureStatus(org.testng.ITestResult)[pri:0, instance:com.informatica.tests.APIPortalRegistryTest@52c3cb31]" started-at="2022-12-15T17:58:25Z" name="captureStatus" finished-at="2022-12-15T17:58:25Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=APIPortalRegistryTest.run_basic_Managed_API(java.lang.Object)[pri:4, instance:com.informatica.tests.APIPortalRegistryTest@52c3cb31] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureStatus -->
        <test-method signature="run_basic_Managed_API(java.lang.Object)[pri:4, instance:com.informatica.tests.APIPortalRegistryTest@52c3cb31]" started-at="2022-12-15T17:58:25Z" name="run_basic_Managed_API" data-provider="getData" finished-at="2022-12-15T17:58:25Z" duration-ms="0" status="SKIP">
          <exception class="com.microsoft.playwright.TimeoutError">
            <message>
              <![CDATA[Timeout 60000ms exceeded]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.microsoft.playwright.TimeoutError: Timeout 60000ms exceeded
at com.microsoft.playwright.impl.WaitableTimeout.get(WaitableTimeout.java:41)
at com.microsoft.playwright.impl.WaitableRace.get(WaitableRace.java:44)
at com.microsoft.playwright.impl.ChannelOwner.runUntil(ChannelOwner.java:103)
at com.microsoft.playwright.impl.FrameImpl.waitForLoadStateImpl(FrameImpl.java:825)
at com.microsoft.playwright.impl.FrameImpl.waitForLoadStateImpl(FrameImpl.java:810)
at com.microsoft.playwright.impl.PageImpl.lambda$waitForLoadState$69(PageImpl.java:1260)
at com.microsoft.playwright.impl.WaitForEventLogger.get(WaitForEventLogger.java:46)
at com.microsoft.playwright.impl.ChannelOwner.withWaitLogging(ChannelOwner.java:72)
at com.microsoft.playwright.impl.PageImpl.waitForLoadState(PageImpl.java:1259)
at com.microsoft.playwright.Page.waitForLoadState(Page.java:6025)
at com.informatica.pages.LoginPage.clickOnApiChiklet(LoginPage.java:64)
at com.informatica.tests.APIPortalRegistryTest.init(APIPortalRegistryTest.java:47)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:458)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
at org.testng.TestRunner.beforeRun(TestRunner.java:529)
at org.testng.TestRunner.run(TestRunner.java:497)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- com.microsoft.playwright.TimeoutError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- run_basic_Managed_API -->
        <test-method is-config="true" signature="register(java.lang.reflect.Method)[pri:0, instance:com.informatica.tests.APIPortalRegistryTest@52c3cb31]" started-at="2022-12-15T17:58:25Z" name="register" finished-at="2022-12-15T17:58:25Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.informatica.tests.APIPortalRegistryTest.run_basic_Managed_API(java.lang.Object) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- register -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.informatica.tests.APIPortalRegistryTest@52c3cb31]" started-at="2022-12-15T17:58:25Z" name="tearDown" finished-at="2022-12-15T17:58:26Z" duration-ms="894" status="FAIL">
          <exception class="com.microsoft.playwright.PlaywrightException">
            <message>
              <![CDATA[Failed to read message from driver, pipe closed.]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.microsoft.playwright.PlaywrightException: Failed to read message from driver, pipe closed.
at com.microsoft.playwright.impl.PipeTransport.poll(PipeTransport.java:75)
at com.microsoft.playwright.impl.Connection.processOneMessage(Connection.java:157)
at com.microsoft.playwright.impl.ChannelOwner.runUntil(ChannelOwner.java:101)
at com.microsoft.playwright.impl.Connection.sendMessage(Connection.java:105)
at com.microsoft.playwright.impl.ChannelOwner.sendMessage(ChannelOwner.java:94)
at com.microsoft.playwright.impl.ChannelOwner.sendMessage(ChannelOwner.java:90)
at com.microsoft.playwright.impl.BrowserContextImpl.closeImpl(BrowserContextImpl.java:196)
at com.microsoft.playwright.impl.BrowserContextImpl.lambda$close$1(BrowserContextImpl.java:170)
at com.microsoft.playwright.impl.LoggingSupport.lambda$withLogging$0(LoggingSupport.java:36)
at com.microsoft.playwright.impl.LoggingSupport.withLogging(LoggingSupport.java:47)
at com.microsoft.playwright.impl.ChannelOwner.withLogging(ChannelOwner.java:79)
at com.microsoft.playwright.impl.LoggingSupport.withLogging(LoggingSupport.java:35)
at com.microsoft.playwright.impl.BrowserContextImpl.close(BrowserContextImpl.java:170)
at com.informatica.tests.BaseTest.tearDown(BaseTest.java:294)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:458)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
at org.testng.TestRunner.afterRun(TestRunner.java:725)
at org.testng.TestRunner.run(TestRunner.java:509)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.io.EOFException
at com.microsoft.playwright.impl.ReaderThread.readIntLE(PipeTransport.java:110)
at com.microsoft.playwright.impl.ReaderThread.readMessage(PipeTransport.java:139)
at com.microsoft.playwright.impl.ReaderThread.run(PipeTransport.java:125)
]]>
            </full-stacktrace>
          </exception> <!-- com.microsoft.playwright.PlaywrightException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.informatica.tests.APIPortalRegistryTest -->
    </test> <!-- API_Portal_Registry -->
    <test started-at="2022-12-15T17:58:26Z" name="API_Groups_In_API_Portal" finished-at="2022-12-15T17:59:01Z" duration-ms="34754">
      <class name="com.informatica.tests.APIPortalAPIGroupsTest">
        <test-method is-config="true" signature="init()[pri:0, instance:com.informatica.tests.APIPortalAPIGroupsTest@1b955cac]" started-at="2022-12-15T17:58:26Z" name="init" finished-at="2022-12-15T17:58:58Z" duration-ms="31787" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method is-config="true" signature="register(java.lang.reflect.Method)[pri:0, instance:com.informatica.tests.APIPortalAPIGroupsTest@1b955cac]" started-at="2022-12-15T17:58:58Z" name="register" finished-at="2022-12-15T17:58:58Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.informatica.tests.APIPortalAPIGroupsTest.validateAPIURLInAPIGroup(java.lang.Object) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- register -->
        <test-method signature="validateAPIURLInAPIGroup(java.lang.Object)[pri:1, instance:com.informatica.tests.APIPortalAPIGroupsTest@1b955cac]" started-at="2022-12-15T17:58:58Z" name="validateAPIURLInAPIGroup" data-provider="getData" finished-at="2022-12-15T17:58:59Z" duration-ms="1807" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Additional Details=apiGroupName=APIM_Automation_Grp,apiGroupContext=/APIM_Automation_Grp,apiName=APIM_Automation_Anon1,apiProtocol=REST, TestMethodName=validateAPIURLInAPIGroup, Description=Test case to validate the API in APIGROUP with Context from API Portal, IsRun=Yes, JIRA_KEY=APIM-1505}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateAPIURLInAPIGroup -->
        <test-method is-config="true" signature="captureStatus(org.testng.ITestResult)[pri:0, instance:com.informatica.tests.APIPortalAPIGroupsTest@1b955cac]" started-at="2022-12-15T17:58:59Z" name="captureStatus" finished-at="2022-12-15T17:58:59Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateAPIURLInAPIGroup status=SUCCESS method=APIPortalAPIGroupsTest.validateAPIURLInAPIGroup(java.lang.Object)[pri:1, instance:com.informatica.tests.APIPortalAPIGroupsTest@1b955cac] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureStatus -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.informatica.tests.APIPortalAPIGroupsTest@1b955cac]" started-at="2022-12-15T17:58:59Z" name="tearDown" finished-at="2022-12-15T17:59:01Z" duration-ms="1155" status="FAIL">
          <exception class="com.microsoft.playwright.PlaywrightException">
            <message>
              <![CDATA[Failed to read message from driver, pipe closed.]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.microsoft.playwright.PlaywrightException: Failed to read message from driver, pipe closed.
at com.microsoft.playwright.impl.PipeTransport.poll(PipeTransport.java:75)
at com.microsoft.playwright.impl.Connection.processOneMessage(Connection.java:157)
at com.microsoft.playwright.impl.ChannelOwner.runUntil(ChannelOwner.java:101)
at com.microsoft.playwright.impl.Connection.sendMessage(Connection.java:105)
at com.microsoft.playwright.impl.ChannelOwner.sendMessage(ChannelOwner.java:94)
at com.microsoft.playwright.impl.ChannelOwner.sendMessage(ChannelOwner.java:90)
at com.microsoft.playwright.impl.BrowserContextImpl.closeImpl(BrowserContextImpl.java:196)
at com.microsoft.playwright.impl.BrowserContextImpl.lambda$close$1(BrowserContextImpl.java:170)
at com.microsoft.playwright.impl.LoggingSupport.lambda$withLogging$0(LoggingSupport.java:36)
at com.microsoft.playwright.impl.LoggingSupport.withLogging(LoggingSupport.java:47)
at com.microsoft.playwright.impl.ChannelOwner.withLogging(ChannelOwner.java:79)
at com.microsoft.playwright.impl.LoggingSupport.withLogging(LoggingSupport.java:35)
at com.microsoft.playwright.impl.BrowserContextImpl.close(BrowserContextImpl.java:170)
at com.informatica.tests.BaseTest.tearDown(BaseTest.java:294)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:458)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
at org.testng.TestRunner.afterRun(TestRunner.java:725)
at org.testng.TestRunner.run(TestRunner.java:509)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.io.EOFException
at com.microsoft.playwright.impl.ReaderThread.readIntLE(PipeTransport.java:110)
at com.microsoft.playwright.impl.ReaderThread.readMessage(PipeTransport.java:139)
at com.microsoft.playwright.impl.ReaderThread.run(PipeTransport.java:125)
]]>
            </full-stacktrace>
          </exception> <!-- com.microsoft.playwright.PlaywrightException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.informatica.tests.APIPortalAPIGroupsTest -->
    </test> <!-- API_Groups_In_API_Portal -->
    <test started-at="2022-12-15T17:57:27Z" name="API_Portal_Home" finished-at="2022-12-15T17:59:01Z" duration-ms="94091">
      <class name="com.informatica.tests.APIPortalHomeTest">
        <test-method is-config="true" signature="init()[pri:0, instance:com.informatica.tests.APIPortalHomeTest@3fc9504b]" started-at="2022-12-15T17:57:27Z" name="init" finished-at="2022-12-15T17:58:53Z" duration-ms="86810" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method signature="validateAnalyticsOverviewTab()[pri:1, instance:com.informatica.tests.APIPortalHomeTest@3fc9504b]" started-at="2022-12-15T17:58:53Z" name="validateAnalyticsOverviewTab" finished-at="2022-12-15T17:58:54Z" duration-ms="533" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateAnalyticsOverviewTab -->
        <test-method is-config="true" signature="register(java.lang.reflect.Method)[pri:0, instance:com.informatica.tests.APIPortalHomeTest@3fc9504b]" started-at="2022-12-15T17:58:53Z" name="register" finished-at="2022-12-15T17:58:53Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.informatica.tests.APIPortalHomeTest.validateAnalyticsOverviewTab() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- register -->
        <test-method is-config="true" signature="captureStatus(org.testng.ITestResult)[pri:0, instance:com.informatica.tests.APIPortalHomeTest@3fc9504b]" started-at="2022-12-15T17:58:54Z" name="captureStatus" finished-at="2022-12-15T17:58:54Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateAnalyticsOverviewTab status=SUCCESS method=APIPortalHomeTest.validateAnalyticsOverviewTab()[pri:1, instance:com.informatica.tests.APIPortalHomeTest@3fc9504b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureStatus -->
        <test-method is-config="true" signature="register(java.lang.reflect.Method)[pri:0, instance:com.informatica.tests.APIPortalHomeTest@3fc9504b]" started-at="2022-12-15T17:58:54Z" name="register" finished-at="2022-12-15T17:58:54Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.informatica.tests.APIPortalHomeTest.validateTopApisTab() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- register -->
        <test-method signature="validateTopApisTab()[pri:2, instance:com.informatica.tests.APIPortalHomeTest@3fc9504b]" started-at="2022-12-15T17:58:54Z" name="validateTopApisTab" finished-at="2022-12-15T17:58:59Z" duration-ms="5432" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateTopApisTab -->
        <test-method is-config="true" signature="captureStatus(org.testng.ITestResult)[pri:0, instance:com.informatica.tests.APIPortalHomeTest@3fc9504b]" started-at="2022-12-15T17:58:59Z" name="captureStatus" finished-at="2022-12-15T17:58:59Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateTopApisTab status=SUCCESS method=APIPortalHomeTest.validateTopApisTab()[pri:2, instance:com.informatica.tests.APIPortalHomeTest@3fc9504b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureStatus -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.informatica.tests.APIPortalHomeTest@3fc9504b]" started-at="2022-12-15T17:58:59Z" name="tearDown" finished-at="2022-12-15T17:59:01Z" duration-ms="1309" status="FAIL">
          <exception class="com.microsoft.playwright.PlaywrightException">
            <message>
              <![CDATA[Failed to read message from driver, pipe closed.]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.microsoft.playwright.PlaywrightException: Failed to read message from driver, pipe closed.
at com.microsoft.playwright.impl.PipeTransport.poll(PipeTransport.java:75)
at com.microsoft.playwright.impl.Connection.processOneMessage(Connection.java:157)
at com.microsoft.playwright.impl.ChannelOwner.runUntil(ChannelOwner.java:101)
at com.microsoft.playwright.impl.Connection.sendMessage(Connection.java:105)
at com.microsoft.playwright.impl.ChannelOwner.sendMessage(ChannelOwner.java:94)
at com.microsoft.playwright.impl.ChannelOwner.sendMessage(ChannelOwner.java:90)
at com.microsoft.playwright.impl.BrowserContextImpl.closeImpl(BrowserContextImpl.java:196)
at com.microsoft.playwright.impl.BrowserContextImpl.lambda$close$1(BrowserContextImpl.java:170)
at com.microsoft.playwright.impl.LoggingSupport.lambda$withLogging$0(LoggingSupport.java:36)
at com.microsoft.playwright.impl.LoggingSupport.withLogging(LoggingSupport.java:47)
at com.microsoft.playwright.impl.ChannelOwner.withLogging(ChannelOwner.java:79)
at com.microsoft.playwright.impl.LoggingSupport.withLogging(LoggingSupport.java:35)
at com.microsoft.playwright.impl.BrowserContextImpl.close(BrowserContextImpl.java:170)
at com.informatica.tests.BaseTest.tearDown(BaseTest.java:294)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:458)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
at org.testng.TestRunner.afterRun(TestRunner.java:725)
at org.testng.TestRunner.run(TestRunner.java:509)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.io.EOFException
at com.microsoft.playwright.impl.ReaderThread.readIntLE(PipeTransport.java:110)
at com.microsoft.playwright.impl.ReaderThread.readMessage(PipeTransport.java:139)
at com.microsoft.playwright.impl.ReaderThread.run(PipeTransport.java:125)
]]>
            </full-stacktrace>
          </exception> <!-- com.microsoft.playwright.PlaywrightException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.informatica.tests.APIPortalHomeTest -->
    </test> <!-- API_Portal_Home -->
    <test started-at="2022-12-15T17:58:26Z" name="APIM_Analytics" finished-at="2022-12-15T18:00:22Z" duration-ms="115829">
      <class name="com.informatica.tests.ApimAnalyticsTest">
        <test-method is-config="true" signature="init()[pri:0, instance:com.informatica.tests.ApimAnalyticsTest@12f9af83]" started-at="2022-12-15T17:58:26Z" name="init" finished-at="2022-12-15T17:58:48Z" duration-ms="21932" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method is-config="true" signature="register(java.lang.reflect.Method)[pri:0, instance:com.informatica.tests.ApimAnalyticsTest@12f9af83]" started-at="2022-12-15T17:58:48Z" name="register" finished-at="2022-12-15T17:58:48Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.informatica.tests.ApimAnalyticsTest.validateAnalyticsOverViewTab() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- register -->
        <test-method signature="validateAnalyticsOverViewTab()[pri:1, instance:com.informatica.tests.ApimAnalyticsTest@12f9af83]" started-at="2022-12-15T17:58:48Z" name="validateAnalyticsOverViewTab" finished-at="2022-12-15T17:59:00Z" duration-ms="11290" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateAnalyticsOverViewTab -->
        <test-method is-config="true" signature="captureStatus(org.testng.ITestResult)[pri:0, instance:com.informatica.tests.ApimAnalyticsTest@12f9af83]" started-at="2022-12-15T17:59:00Z" name="captureStatus" finished-at="2022-12-15T17:59:00Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateAnalyticsOverViewTab status=SUCCESS method=ApimAnalyticsTest.validateAnalyticsOverViewTab()[pri:1, instance:com.informatica.tests.ApimAnalyticsTest@12f9af83] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureStatus -->
        <test-method is-config="true" signature="register(java.lang.reflect.Method)[pri:0, instance:com.informatica.tests.ApimAnalyticsTest@12f9af83]" started-at="2022-12-15T17:59:00Z" name="register" finished-at="2022-12-15T17:59:00Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.informatica.tests.ApimAnalyticsTest.validateAnalyticsActivityLogTab() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- register -->
        <test-method signature="validateAnalyticsActivityLogTab()[pri:2, instance:com.informatica.tests.ApimAnalyticsTest@12f9af83]" started-at="2022-12-15T17:59:00Z" name="validateAnalyticsActivityLogTab" finished-at="2022-12-15T17:59:00Z" duration-ms="502" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateAnalyticsActivityLogTab -->
        <test-method is-config="true" signature="captureStatus(org.testng.ITestResult)[pri:0, instance:com.informatica.tests.ApimAnalyticsTest@12f9af83]" started-at="2022-12-15T17:59:00Z" name="captureStatus" finished-at="2022-12-15T17:59:00Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateAnalyticsActivityLogTab status=SUCCESS method=ApimAnalyticsTest.validateAnalyticsActivityLogTab()[pri:2, instance:com.informatica.tests.ApimAnalyticsTest@12f9af83] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureStatus -->
        <test-method signature="validateAnalyticsEventsLogTab()[pri:3, instance:com.informatica.tests.ApimAnalyticsTest@12f9af83]" started-at="2022-12-15T17:59:00Z" name="validateAnalyticsEventsLogTab" finished-at="2022-12-15T18:00:22Z" duration-ms="81485" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateAnalyticsEventsLogTab -->
        <test-method is-config="true" signature="register(java.lang.reflect.Method)[pri:0, instance:com.informatica.tests.ApimAnalyticsTest@12f9af83]" started-at="2022-12-15T17:59:00Z" name="register" finished-at="2022-12-15T17:59:00Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.informatica.tests.ApimAnalyticsTest.validateAnalyticsEventsLogTab() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- register -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.informatica.tests.ApimAnalyticsTest@12f9af83]" started-at="2022-12-15T18:00:22Z" name="tearDown" finished-at="2022-12-15T18:00:22Z" duration-ms="614" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="captureStatus(org.testng.ITestResult)[pri:0, instance:com.informatica.tests.ApimAnalyticsTest@12f9af83]" started-at="2022-12-15T18:00:22Z" name="captureStatus" finished-at="2022-12-15T18:00:22Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateAnalyticsEventsLogTab status=SUCCESS method=ApimAnalyticsTest.validateAnalyticsEventsLogTab()[pri:3, instance:com.informatica.tests.ApimAnalyticsTest@12f9af83] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureStatus -->
      </class> <!-- com.informatica.tests.ApimAnalyticsTest -->
    </test> <!-- APIM_Analytics -->
    <test started-at="2022-12-15T17:59:01Z" name="APIM_OAuth2" finished-at="2022-12-15T18:02:34Z" duration-ms="213812">
      <class name="com.informatica.tests.PoliciesAuthorizationTest">
        <test-method is-config="true" signature="init()[pri:0, instance:com.informatica.tests.PoliciesAuthorizationTest@6bca7e0d]" started-at="2022-12-15T17:59:01Z" name="init" finished-at="2022-12-15T17:59:30Z" duration-ms="29841" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method is-config="true" signature="register(java.lang.reflect.Method)[pri:0, instance:com.informatica.tests.PoliciesAuthorizationTest@6bca7e0d]" started-at="2022-12-15T17:59:31Z" name="register" finished-at="2022-12-15T17:59:31Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.informatica.tests.PoliciesAuthorizationTest.ValdiateCreateOAuth2Client(java.lang.Object)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- register -->
        <test-method signature="ValdiateCreateOAuth2Client(java.lang.Object)[pri:1, instance:com.informatica.tests.PoliciesAuthorizationTest@6bca7e0d]" started-at="2022-12-15T17:59:31Z" name="ValdiateCreateOAuth2Client" data-provider="getData" finished-at="2022-12-15T18:00:31Z" duration-ms="60623" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Additional Details=Processname=APIM_Automation_Basic_OAuth, TestMethodName=ValdiateCreateOAuth2Client, Description=Test case to validate Creation of oAuth2 Client, IsRun=Yes, JIRA_KEY=APIM-1498}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Exception while validating Create OAuth2 Client]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Exception while validating Create OAuth2 Client
at org.testng.Assert.fail(Assert.java:96)
at com.informatica.tests.PoliciesAuthorizationTest.ValdiateCreateOAuth2Client(PoliciesAuthorizationTest.java:91)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValdiateCreateOAuth2Client -->
        <test-method is-config="true" signature="captureStatus(org.testng.ITestResult)[pri:0, instance:com.informatica.tests.PoliciesAuthorizationTest@6bca7e0d]" started-at="2022-12-15T18:00:31Z" name="captureStatus" finished-at="2022-12-15T18:00:31Z" duration-ms="324" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValdiateCreateOAuth2Client status=FAILURE method=PoliciesAuthorizationTest.ValdiateCreateOAuth2Client(java.lang.Object)[pri:1, instance:com.informatica.tests.PoliciesAuthorizationTest@6bca7e0d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureStatus -->
        <test-method is-config="true" signature="register(java.lang.reflect.Method)[pri:0, instance:com.informatica.tests.PoliciesAuthorizationTest@6bca7e0d]" started-at="2022-12-15T18:00:31Z" name="register" finished-at="2022-12-15T18:00:31Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.informatica.tests.PoliciesAuthorizationTest.ValdiateEditOAuth2Client()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- register -->
        <test-method signature="ValdiateEditOAuth2Client()[pri:2, instance:com.informatica.tests.PoliciesAuthorizationTest@6bca7e0d]" started-at="2022-12-15T18:00:31Z" name="ValdiateEditOAuth2Client" finished-at="2022-12-15T18:01:34Z" duration-ms="62132" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Exception while validating Create OAuth2 Client]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Exception while validating Create OAuth2 Client
at org.testng.Assert.fail(Assert.java:96)
at com.informatica.tests.PoliciesAuthorizationTest.ValdiateEditOAuth2Client(PoliciesAuthorizationTest.java:137)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValdiateEditOAuth2Client -->
        <test-method is-config="true" signature="captureStatus(org.testng.ITestResult)[pri:0, instance:com.informatica.tests.PoliciesAuthorizationTest@6bca7e0d]" started-at="2022-12-15T18:01:34Z" name="captureStatus" finished-at="2022-12-15T18:01:34Z" duration-ms="258" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValdiateEditOAuth2Client status=FAILURE method=PoliciesAuthorizationTest.ValdiateEditOAuth2Client()[pri:2, instance:com.informatica.tests.PoliciesAuthorizationTest@6bca7e0d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureStatus -->
        <test-method is-config="true" signature="register(java.lang.reflect.Method)[pri:0, instance:com.informatica.tests.PoliciesAuthorizationTest@6bca7e0d]" started-at="2022-12-15T18:01:34Z" name="register" finished-at="2022-12-15T18:01:34Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.informatica.tests.PoliciesAuthorizationTest.ValdiateDeleteOAuth2Client()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- register -->
        <test-method signature="ValdiateDeleteOAuth2Client()[pri:3, instance:com.informatica.tests.PoliciesAuthorizationTest@6bca7e0d]" started-at="2022-12-15T18:01:34Z" name="ValdiateDeleteOAuth2Client" finished-at="2022-12-15T18:02:34Z" duration-ms="60033" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Exception while validating Deleting OAuth2 Client]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Exception while validating Deleting OAuth2 Client
at org.testng.Assert.fail(Assert.java:96)
at com.informatica.tests.PoliciesAuthorizationTest.ValdiateDeleteOAuth2Client(PoliciesAuthorizationTest.java:166)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValdiateDeleteOAuth2Client -->
        <test-method is-config="true" signature="captureStatus(org.testng.ITestResult)[pri:0, instance:com.informatica.tests.PoliciesAuthorizationTest@6bca7e0d]" started-at="2022-12-15T18:02:34Z" name="captureStatus" finished-at="2022-12-15T18:02:34Z" duration-ms="223" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValdiateDeleteOAuth2Client status=FAILURE method=PoliciesAuthorizationTest.ValdiateDeleteOAuth2Client()[pri:3, instance:com.informatica.tests.PoliciesAuthorizationTest@6bca7e0d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureStatus -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.informatica.tests.PoliciesAuthorizationTest@6bca7e0d]" started-at="2022-12-15T18:02:34Z" name="tearDown" finished-at="2022-12-15T18:02:34Z" duration-ms="370" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.informatica.tests.PoliciesAuthorizationTest -->
    </test> <!-- APIM_OAuth2 -->
    <test started-at="2022-12-15T17:56:52Z" name="APIM_Home_Page" finished-at="2022-12-15T18:03:21Z" duration-ms="389316">
      <class name="com.informatica.tests.APIMRegisteryTest">
        <test-method is-config="true" signature="init()[pri:0, instance:com.informatica.tests.APIMRegisteryTest@64a40280]" started-at="2022-12-15T17:56:52Z" name="init" finished-at="2022-12-15T17:58:03Z" duration-ms="71573" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method is-config="true" signature="register(java.lang.reflect.Method)[pri:0, instance:com.informatica.tests.APIMRegisteryTest@64a40280]" started-at="2022-12-15T17:58:03Z" name="register" finished-at="2022-12-15T17:58:03Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.informatica.tests.APIMRegisteryTest.SearchActiveStatus()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- register -->
        <test-method signature="SearchActiveStatus()[pri:1, instance:com.informatica.tests.APIMRegisteryTest@64a40280]" started-at="2022-12-15T17:58:03Z" name="SearchActiveStatus" finished-at="2022-12-15T17:59:03Z" duration-ms="60121" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Exception while validating SearchActiveStatus]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Exception while validating SearchActiveStatus
at org.testng.Assert.fail(Assert.java:96)
at com.informatica.tests.APIMRegisteryTest.SearchActiveStatus(APIMRegisteryTest.java:64)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SearchActiveStatus -->
        <test-method is-config="true" signature="captureStatus(org.testng.ITestResult)[pri:0, instance:com.informatica.tests.APIMRegisteryTest@64a40280]" started-at="2022-12-15T17:59:03Z" name="captureStatus" finished-at="2022-12-15T17:59:04Z" duration-ms="423" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SearchActiveStatus status=FAILURE method=APIMRegisteryTest.SearchActiveStatus()[pri:1, instance:com.informatica.tests.APIMRegisteryTest@64a40280] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureStatus -->
        <test-method is-config="true" signature="register(java.lang.reflect.Method)[pri:0, instance:com.informatica.tests.APIMRegisteryTest@64a40280]" started-at="2022-12-15T17:59:04Z" name="register" finished-at="2022-12-15T17:59:04Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.informatica.tests.APIMRegisteryTest.SearchInActiveStatus()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- register -->
        <test-method signature="SearchInActiveStatus()[pri:2, instance:com.informatica.tests.APIMRegisteryTest@64a40280]" started-at="2022-12-15T17:59:04Z" name="SearchInActiveStatus" finished-at="2022-12-15T17:59:04Z" duration-ms="14" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at com.informatica.tests.APIMRegisteryTest.SearchInActiveStatus(APIMRegisteryTest.java:77)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SearchInActiveStatus -->
        <test-method is-config="true" signature="captureStatus(org.testng.ITestResult)[pri:0, instance:com.informatica.tests.APIMRegisteryTest@64a40280]" started-at="2022-12-15T17:59:04Z" name="captureStatus" finished-at="2022-12-15T17:59:04Z" duration-ms="342" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SearchInActiveStatus status=FAILURE method=APIMRegisteryTest.SearchInActiveStatus()[pri:2, instance:com.informatica.tests.APIMRegisteryTest@64a40280] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureStatus -->
        <test-method is-config="true" signature="register(java.lang.reflect.Method)[pri:0, instance:com.informatica.tests.APIMRegisteryTest@64a40280]" started-at="2022-12-15T17:59:04Z" name="register" finished-at="2022-12-15T17:59:04Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.informatica.tests.APIMRegisteryTest.Search_ActiveServiceNot_AvailiableStatus()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- register -->
        <test-method signature="Search_ActiveServiceNot_AvailiableStatus()[pri:3, instance:com.informatica.tests.APIMRegisteryTest@64a40280]" started-at="2022-12-15T17:59:04Z" name="Search_ActiveServiceNot_AvailiableStatus" finished-at="2022-12-15T17:59:04Z" duration-ms="7" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at com.informatica.tests.APIMRegisteryTest.Search_ActiveServiceNot_AvailiableStatus(APIMRegisteryTest.java:94)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Search_ActiveServiceNot_AvailiableStatus -->
        <test-method is-config="true" signature="captureStatus(org.testng.ITestResult)[pri:0, instance:com.informatica.tests.APIMRegisteryTest@64a40280]" started-at="2022-12-15T17:59:04Z" name="captureStatus" finished-at="2022-12-15T17:59:04Z" duration-ms="377" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Search_ActiveServiceNot_AvailiableStatus status=FAILURE method=APIMRegisteryTest.Search_ActiveServiceNot_AvailiableStatus()[pri:3, instance:com.informatica.tests.APIMRegisteryTest@64a40280] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureStatus -->
        <test-method is-config="true" signature="register(java.lang.reflect.Method)[pri:0, instance:com.informatica.tests.APIMRegisteryTest@64a40280]" started-at="2022-12-15T17:59:04Z" name="register" finished-at="2022-12-15T17:59:04Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.informatica.tests.APIMRegisteryTest.Search_InActiveServiceNot_AvailiableStatus()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- register -->
        <test-method signature="Search_InActiveServiceNot_AvailiableStatus()[pri:4, instance:com.informatica.tests.APIMRegisteryTest@64a40280]" started-at="2022-12-15T17:59:04Z" name="Search_InActiveServiceNot_AvailiableStatus" finished-at="2022-12-15T17:59:04Z" duration-ms="8" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at com.informatica.tests.APIMRegisteryTest.Search_InActiveServiceNot_AvailiableStatus(APIMRegisteryTest.java:111)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Search_InActiveServiceNot_AvailiableStatus -->
        <test-method is-config="true" signature="captureStatus(org.testng.ITestResult)[pri:0, instance:com.informatica.tests.APIMRegisteryTest@64a40280]" started-at="2022-12-15T17:59:04Z" name="captureStatus" finished-at="2022-12-15T17:59:05Z" duration-ms="374" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Search_InActiveServiceNot_AvailiableStatus status=FAILURE method=APIMRegisteryTest.Search_InActiveServiceNot_AvailiableStatus()[pri:4, instance:com.informatica.tests.APIMRegisteryTest@64a40280] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureStatus -->
        <test-method is-config="true" signature="register(java.lang.reflect.Method)[pri:0, instance:com.informatica.tests.APIMRegisteryTest@64a40280]" started-at="2022-12-15T17:59:05Z" name="register" finished-at="2022-12-15T17:59:05Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.informatica.tests.APIMRegisteryTest.ValidateHeadersAPiRegistry()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- register -->
        <test-method signature="ValidateHeadersAPiRegistry()[pri:5, instance:com.informatica.tests.APIMRegisteryTest@64a40280]" started-at="2022-12-15T17:59:05Z" name="ValidateHeadersAPiRegistry" finished-at="2022-12-15T18:00:05Z" duration-ms="60035" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Exception while validating HeadersAPiRegistry]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Exception while validating HeadersAPiRegistry
at org.testng.Assert.fail(Assert.java:96)
at com.informatica.tests.APIMRegisteryTest.ValidateHeadersAPiRegistry(APIMRegisteryTest.java:137)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateHeadersAPiRegistry -->
        <test-method is-config="true" signature="captureStatus(org.testng.ITestResult)[pri:0, instance:com.informatica.tests.APIMRegisteryTest@64a40280]" started-at="2022-12-15T18:00:05Z" name="captureStatus" finished-at="2022-12-15T18:00:05Z" duration-ms="263" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateHeadersAPiRegistry status=FAILURE method=APIMRegisteryTest.ValidateHeadersAPiRegistry()[pri:5, instance:com.informatica.tests.APIMRegisteryTest@64a40280] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureStatus -->
        <test-method is-config="true" signature="register(java.lang.reflect.Method)[pri:0, instance:com.informatica.tests.APIMRegisteryTest@64a40280]" started-at="2022-12-15T18:00:05Z" name="register" finished-at="2022-12-15T18:00:05Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.informatica.tests.APIMRegisteryTest.CreateManagagedAPI(java.lang.Object)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- register -->
        <test-method signature="CreateManagagedAPI(java.lang.Object)[pri:8, instance:com.informatica.tests.APIMRegisteryTest@64a40280]" started-at="2022-12-15T18:00:05Z" name="CreateManagagedAPI" data-provider="getData" finished-at="2022-12-15T18:01:07Z" duration-ms="62257" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Additional Details=APIName=APIM_Automation_JWT,Version=1.0.0,Protocol=REST, TestMethodName=CreateManagagedAPI, Description=Test case to validate cretaion of managed API, IsRun=Yes, JIRA_KEY=APIM-1506}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Exception while creating CreateManagagedAPIValidation]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Exception while creating CreateManagagedAPIValidation
at org.testng.Assert.fail(Assert.java:96)
at com.informatica.tests.APIMRegisteryTest.CreateManagagedAPI(APIMRegisteryTest.java:218)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateManagagedAPI -->
        <test-method is-config="true" signature="captureStatus(org.testng.ITestResult)[pri:0, instance:com.informatica.tests.APIMRegisteryTest@64a40280]" started-at="2022-12-15T18:01:07Z" name="captureStatus" finished-at="2022-12-15T18:01:08Z" duration-ms="260" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=CreateManagagedAPI status=FAILURE method=APIMRegisteryTest.CreateManagagedAPI(java.lang.Object)[pri:8, instance:com.informatica.tests.APIMRegisteryTest@64a40280] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureStatus -->
        <test-method signature="CreateNewVersionAPI(java.lang.Object)[pri:9, instance:com.informatica.tests.APIMRegisteryTest@64a40280]" started-at="2022-12-15T18:01:08Z" name="CreateNewVersionAPI" data-provider="getData" finished-at="2022-12-15T18:02:10Z" duration-ms="62349" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Additional Details=APIName=APIM_Automation_NewVersion1,APINameV2=APIM_Automation_NewVersion2,Version=1.0.0,Version1=2.0.0,Version2=abc,Protocol=REST,Protocol2=SOAP, TestMethodName=CreateNewVersionAPI, Description=Test case to validate creation of new version managed API, IsRun=Yes, JIRA_KEY=APIM-1507}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Exception while creating CreateNewVersionAPI]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Exception while creating CreateNewVersionAPI
at org.testng.Assert.fail(Assert.java:96)
at com.informatica.tests.APIMRegisteryTest.CreateNewVersionAPI(APIMRegisteryTest.java:295)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateNewVersionAPI -->
        <test-method is-config="true" signature="register(java.lang.reflect.Method)[pri:0, instance:com.informatica.tests.APIMRegisteryTest@64a40280]" started-at="2022-12-15T18:01:08Z" name="register" finished-at="2022-12-15T18:01:08Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.informatica.tests.APIMRegisteryTest.CreateNewVersionAPI(java.lang.Object)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- register -->
        <test-method is-config="true" signature="captureStatus(org.testng.ITestResult)[pri:0, instance:com.informatica.tests.APIMRegisteryTest@64a40280]" started-at="2022-12-15T18:02:10Z" name="captureStatus" finished-at="2022-12-15T18:02:10Z" duration-ms="288" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=CreateNewVersionAPI status=FAILURE method=APIMRegisteryTest.CreateNewVersionAPI(java.lang.Object)[pri:9, instance:com.informatica.tests.APIMRegisteryTest@64a40280] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureStatus -->
        <test-method is-config="true" signature="register(java.lang.reflect.Method)[pri:0, instance:com.informatica.tests.APIMRegisteryTest@64a40280]" started-at="2022-12-15T18:02:10Z" name="register" finished-at="2022-12-15T18:02:10Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.informatica.tests.APIMRegisteryTest.DeleteManagagedAPI(java.lang.Object) throws java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- register -->
        <test-method signature="DeleteManagagedAPI(java.lang.Object)[pri:10, instance:com.informatica.tests.APIMRegisteryTest@64a40280]" started-at="2022-12-15T18:02:10Z" name="DeleteManagagedAPI" data-provider="getData" finished-at="2022-12-15T18:03:12Z" duration-ms="62209" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Additional Details=APIName=APIM_Automation_JWT,Version=1.0.0,Protocol=REST, TestMethodName=DeleteManagagedAPI, Description=Test case to validate deletion of managed API, IsRun=Yes, JIRA_KEY=APIM-1638}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Exception while deleting DeleteManagagedAPIValidation]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Exception while deleting DeleteManagagedAPIValidation
at org.testng.Assert.fail(Assert.java:96)
at com.informatica.tests.APIMRegisteryTest.DeleteManagagedAPI(APIMRegisteryTest.java:342)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DeleteManagagedAPI -->
        <test-method is-config="true" signature="captureStatus(org.testng.ITestResult)[pri:0, instance:com.informatica.tests.APIMRegisteryTest@64a40280]" started-at="2022-12-15T18:03:12Z" name="captureStatus" finished-at="2022-12-15T18:03:13Z" duration-ms="202" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=DeleteManagagedAPI status=FAILURE method=APIMRegisteryTest.DeleteManagagedAPI(java.lang.Object)[pri:10, instance:com.informatica.tests.APIMRegisteryTest@64a40280] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureStatus -->
        <test-method is-config="true" signature="register(java.lang.reflect.Method)[pri:0, instance:com.informatica.tests.APIMRegisteryTest@64a40280]" started-at="2022-12-15T18:03:13Z" name="register" finished-at="2022-12-15T18:03:13Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.informatica.tests.APIMRegisteryTest.validateManagedAPIDropdown()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- register -->
        <test-method signature="validateManagedAPIDropdown()[pri:11, instance:com.informatica.tests.APIMRegisteryTest@64a40280]" started-at="2022-12-15T18:03:13Z" name="validateManagedAPIDropdown" finished-at="2022-12-15T18:03:13Z" duration-ms="249" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateManagedAPIDropdown -->
        <test-method is-config="true" signature="captureStatus(org.testng.ITestResult)[pri:0, instance:com.informatica.tests.APIMRegisteryTest@64a40280]" started-at="2022-12-15T18:03:13Z" name="captureStatus" finished-at="2022-12-15T18:03:13Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateManagedAPIDropdown status=SUCCESS method=APIMRegisteryTest.validateManagedAPIDropdown()[pri:11, instance:com.informatica.tests.APIMRegisteryTest@64a40280] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureStatus -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.informatica.tests.APIMRegisteryTest@64a40280]" started-at="2022-12-15T18:03:13Z" name="tearDown" finished-at="2022-12-15T18:03:21Z" duration-ms="7944" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.informatica.tests.APIMRegisteryTest -->
    </test> <!-- APIM_Home_Page -->
    <test started-at="2022-12-15T17:59:01Z" name="APIM_CustomAPI" finished-at="2022-12-15T18:03:42Z" duration-ms="281587">
      <class name="com.informatica.tests.CustomAPITest">
        <test-method is-config="true" signature="init()[pri:0, instance:com.informatica.tests.CustomAPITest@a87f8ec]" started-at="2022-12-15T17:59:01Z" name="init" finished-at="2022-12-15T17:59:33Z" duration-ms="32438" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method is-config="true" signature="register(java.lang.reflect.Method)[pri:0, instance:com.informatica.tests.CustomAPITest@a87f8ec]" started-at="2022-12-15T17:59:33Z" name="register" finished-at="2022-12-15T17:59:33Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.informatica.tests.CustomAPITest.ValdiateTestAndCreateCustomAPI(java.lang.Object)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- register -->
        <test-method signature="ValdiateTestAndCreateCustomAPI(java.lang.Object)[pri:1, instance:com.informatica.tests.CustomAPITest@a87f8ec]" started-at="2022-12-15T17:59:33Z" name="ValdiateTestAndCreateCustomAPI" data-provider="getData" finished-at="2022-12-15T18:00:24Z" duration-ms="51118" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Additional Details=-, TestMethodName=ValdiateTestAndCreateCustomAPI, Description=Test case to validate Test and Creation of Custom API, IsRun=Yes, JIRA_KEY=APIM-1635}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValdiateTestAndCreateCustomAPI -->
        <test-method is-config="true" signature="captureStatus(org.testng.ITestResult)[pri:0, instance:com.informatica.tests.CustomAPITest@a87f8ec]" started-at="2022-12-15T18:00:24Z" name="captureStatus" finished-at="2022-12-15T18:00:24Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValdiateTestAndCreateCustomAPI status=SUCCESS method=CustomAPITest.ValdiateTestAndCreateCustomAPI(java.lang.Object)[pri:1, instance:com.informatica.tests.CustomAPITest@a87f8ec] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureStatus -->
        <test-method signature="ValdiateAddRatelimitToCustomApi(java.lang.Object)[pri:2, instance:com.informatica.tests.CustomAPITest@a87f8ec]" started-at="2022-12-15T18:00:24Z" name="ValdiateAddRatelimitToCustomApi" data-provider="getData" finished-at="2022-12-15T18:00:29Z" depends-on-methods="com.informatica.tests.CustomAPITest.ValdiateTestAndCreateCustomAPI" duration-ms="4919" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Additional Details=-, TestMethodName=ValdiateAddRatelimitToCustomApi, Description=Test case to validate Rate Limit for Custom API, IsRun=Yes, JIRA_KEY=APIM-1658}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [The Managed API "CustomAPI_Automation" was updated successfully.] but found [Failed to update the Managed API "CustomAPI_Automation"]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [The Managed API "CustomAPI_Automation" was updated successfully.] but found [Failed to update the Managed API "CustomAPI_Automation"]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at com.informatica.tests.CustomAPITest.ValdiateAddRatelimitToCustomApi(CustomAPITest.java:119)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValdiateAddRatelimitToCustomApi -->
        <test-method is-config="true" signature="register(java.lang.reflect.Method)[pri:0, instance:com.informatica.tests.CustomAPITest@a87f8ec]" started-at="2022-12-15T18:00:24Z" name="register" finished-at="2022-12-15T18:00:24Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.informatica.tests.CustomAPITest.ValdiateAddRatelimitToCustomApi(java.lang.Object)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- register -->
        <test-method is-config="true" signature="captureStatus(org.testng.ITestResult)[pri:0, instance:com.informatica.tests.CustomAPITest@a87f8ec]" started-at="2022-12-15T18:00:29Z" name="captureStatus" finished-at="2022-12-15T18:00:29Z" duration-ms="176" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValdiateAddRatelimitToCustomApi status=FAILURE method=CustomAPITest.ValdiateAddRatelimitToCustomApi(java.lang.Object)[pri:2, instance:com.informatica.tests.CustomAPITest@a87f8ec] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureStatus -->
        <test-method is-config="true" signature="register(java.lang.reflect.Method)[pri:0, instance:com.informatica.tests.CustomAPITest@a87f8ec]" started-at="2022-12-15T18:00:29Z" name="register" finished-at="2022-12-15T18:00:29Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.informatica.tests.CustomAPITest.ValdiateAddIpFilteringToCustomApi(java.lang.Object)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- register -->
        <test-method signature="ValdiateAddIpFilteringToCustomApi(java.lang.Object)[pri:3, instance:com.informatica.tests.CustomAPITest@a87f8ec]" started-at="2022-12-15T18:00:29Z" name="ValdiateAddIpFilteringToCustomApi" data-provider="getData" finished-at="2022-12-15T18:01:29Z" depends-on-methods="com.informatica.tests.CustomAPITest.ValdiateTestAndCreateCustomAPI" duration-ms="60008" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Additional Details=-, TestMethodName=ValdiateAddIpFilteringToCustomApi, Description=Test case to validate IP Filtering for Custom API, IsRun=Yes, JIRA_KEY=APIM-1657}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Exception while validating  update IpFiltering for CustomAPI]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Exception while validating  update IpFiltering for CustomAPI
at org.testng.Assert.fail(Assert.java:96)
at com.informatica.tests.CustomAPITest.ValdiateAddIpFilteringToCustomApi(CustomAPITest.java:167)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValdiateAddIpFilteringToCustomApi -->
        <test-method is-config="true" signature="captureStatus(org.testng.ITestResult)[pri:0, instance:com.informatica.tests.CustomAPITest@a87f8ec]" started-at="2022-12-15T18:01:29Z" name="captureStatus" finished-at="2022-12-15T18:01:30Z" duration-ms="233" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValdiateAddIpFilteringToCustomApi status=FAILURE method=CustomAPITest.ValdiateAddIpFilteringToCustomApi(java.lang.Object)[pri:3, instance:com.informatica.tests.CustomAPITest@a87f8ec] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureStatus -->
        <test-method is-config="true" signature="register(java.lang.reflect.Method)[pri:0, instance:com.informatica.tests.CustomAPITest@a87f8ec]" started-at="2022-12-15T18:01:30Z" name="register" finished-at="2022-12-15T18:01:30Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.informatica.tests.CustomAPITest.ValdiateAddGroupToCustomApi(java.lang.Object)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- register -->
        <test-method signature="ValdiateAddGroupToCustomApi(java.lang.Object)[pri:4, instance:com.informatica.tests.CustomAPITest@a87f8ec]" started-at="2022-12-15T18:01:30Z" name="ValdiateAddGroupToCustomApi" data-provider="getData" finished-at="2022-12-15T18:02:30Z" depends-on-methods="com.informatica.tests.CustomAPITest.ValdiateTestAndCreateCustomAPI" duration-ms="60016" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Additional Details=-, TestMethodName=ValdiateAddGroupToCustomApi, Description=Test case to validate Adding Groups to Custom API, IsRun=Yes, JIRA_KEY=APIM-1637}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Exception while validating  update Groups for CustomAPI]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Exception while validating  update Groups for CustomAPI
at org.testng.Assert.fail(Assert.java:96)
at com.informatica.tests.CustomAPITest.ValdiateAddGroupToCustomApi(CustomAPITest.java:202)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValdiateAddGroupToCustomApi -->
        <test-method is-config="true" signature="captureStatus(org.testng.ITestResult)[pri:0, instance:com.informatica.tests.CustomAPITest@a87f8ec]" started-at="2022-12-15T18:02:30Z" name="captureStatus" finished-at="2022-12-15T18:02:30Z" duration-ms="249" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValdiateAddGroupToCustomApi status=FAILURE method=CustomAPITest.ValdiateAddGroupToCustomApi(java.lang.Object)[pri:4, instance:com.informatica.tests.CustomAPITest@a87f8ec] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureStatus -->
        <test-method signature="ValdiateDeleteCustomAPI(java.lang.Object)[pri:5, instance:com.informatica.tests.CustomAPITest@a87f8ec]" started-at="2022-12-15T18:02:30Z" name="ValdiateDeleteCustomAPI" data-provider="getData" finished-at="2022-12-15T18:03:30Z" depends-on-methods="com.informatica.tests.CustomAPITest.ValdiateTestAndCreateCustomAPI" duration-ms="60009" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Additional Details=-, TestMethodName=ValdiateDeleteCustomAPI, Description=Test case to validate Dleting the Group, IsRun=Yes, JIRA_KEY=-}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Exception while validating  Delete Custom API]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Exception while validating  Delete Custom API
at org.testng.Assert.fail(Assert.java:96)
at com.informatica.tests.CustomAPITest.ValdiateDeleteCustomAPI(CustomAPITest.java:231)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValdiateDeleteCustomAPI -->
        <test-method is-config="true" signature="register(java.lang.reflect.Method)[pri:0, instance:com.informatica.tests.CustomAPITest@a87f8ec]" started-at="2022-12-15T18:02:30Z" name="register" finished-at="2022-12-15T18:02:30Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.informatica.tests.CustomAPITest.ValdiateDeleteCustomAPI(java.lang.Object)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- register -->
        <test-method is-config="true" signature="captureStatus(org.testng.ITestResult)[pri:0, instance:com.informatica.tests.CustomAPITest@a87f8ec]" started-at="2022-12-15T18:03:30Z" name="captureStatus" finished-at="2022-12-15T18:03:30Z" duration-ms="295" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValdiateDeleteCustomAPI status=FAILURE method=CustomAPITest.ValdiateDeleteCustomAPI(java.lang.Object)[pri:5, instance:com.informatica.tests.CustomAPITest@a87f8ec] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureStatus -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.informatica.tests.CustomAPITest@a87f8ec]" started-at="2022-12-15T18:03:30Z" name="tearDown" finished-at="2022-12-15T18:03:42Z" duration-ms="12117" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.informatica.tests.CustomAPITest -->
    </test> <!-- APIM_CustomAPI -->
    <test started-at="2022-12-15T18:03:21Z" name="ClientSdk" finished-at="2022-12-15T18:03:58Z" duration-ms="36680">
      <class name="com.informatica.tests.ClientSdkTest">
        <test-method is-config="true" signature="init()[pri:0, instance:com.informatica.tests.ClientSdkTest@47f9738]" started-at="2022-12-15T18:03:21Z" name="init" finished-at="2022-12-15T18:03:49Z" duration-ms="28126" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method signature="verifyClientSdkItemsAndDownload(java.lang.Object)[pri:1, instance:com.informatica.tests.ClientSdkTest@47f9738]" started-at="2022-12-15T18:03:49Z" name="verifyClientSdkItemsAndDownload" description="APIM_UI_Sanity_TC022_Verify that the Download SDK option is working for a Managed API" data-provider="getData" finished-at="2022-12-15T18:03:57Z" duration-ms="8257" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Additional Details=Processname=APIM_Automation_Anon1, TestMethodName=verifyClientSdkItemsAndDownload, Description=APIM_UI_Sanity_TC022_Verify that the Download SDK option is working for a Managed API, IsRun=Yes, JIRA_KEY=APIM-1495}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyClientSdkItemsAndDownload -->
        <test-method is-config="true" signature="register(java.lang.reflect.Method)[pri:0, instance:com.informatica.tests.ClientSdkTest@47f9738]" started-at="2022-12-15T18:03:49Z" name="register" finished-at="2022-12-15T18:03:49Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.informatica.tests.ClientSdkTest.verifyClientSdkItemsAndDownload(java.lang.Object)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- register -->
        <test-method is-config="true" signature="captureStatus(org.testng.ITestResult)[pri:0, instance:com.informatica.tests.ClientSdkTest@47f9738]" started-at="2022-12-15T18:03:57Z" name="captureStatus" finished-at="2022-12-15T18:03:57Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyClientSdkItemsAndDownload status=SUCCESS method=ClientSdkTest.verifyClientSdkItemsAndDownload(java.lang.Object)[pri:1, instance:com.informatica.tests.ClientSdkTest@47f9738] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureStatus -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.informatica.tests.ClientSdkTest@47f9738]" started-at="2022-12-15T18:03:57Z" name="tearDown" finished-at="2022-12-15T18:03:58Z" duration-ms="295" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.informatica.tests.ClientSdkTest -->
    </test> <!-- ClientSdk -->
    <test started-at="2022-12-15T18:03:42Z" name="OrgLevelPolicies" finished-at="2022-12-15T18:04:25Z" duration-ms="42655">
      <class name="com.informatica.tests.OrgLevelPoliciesTest">
        <test-method is-config="true" signature="beforeSuite()[pri:0, instance:com.informatica.tests.OrgLevelPoliciesTest@42bc14c1]" started-at="2022-12-15T17:56:51Z" name="beforeSuite" finished-at="2022-12-15T17:56:52Z" duration-ms="452" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method is-config="true" signature="init()[pri:0, instance:com.informatica.tests.OrgLevelPoliciesTest@42bc14c1]" started-at="2022-12-15T18:03:42Z" name="init" finished-at="2022-12-15T18:04:21Z" duration-ms="38488" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method signature="validateOrgRateLimitUI()[pri:1, instance:com.informatica.tests.OrgLevelPoliciesTest@42bc14c1]" started-at="2022-12-15T18:04:21Z" name="validateOrgRateLimitUI" finished-at="2022-12-15T18:04:21Z" duration-ms="114" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateOrgRateLimitUI -->
        <test-method is-config="true" signature="register(java.lang.reflect.Method)[pri:0, instance:com.informatica.tests.OrgLevelPoliciesTest@42bc14c1]" started-at="2022-12-15T18:04:21Z" name="register" finished-at="2022-12-15T18:04:21Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.informatica.tests.OrgLevelPoliciesTest.validateOrgRateLimitUI()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- register -->
        <test-method is-config="true" signature="captureStatus(org.testng.ITestResult)[pri:0, instance:com.informatica.tests.OrgLevelPoliciesTest@42bc14c1]" started-at="2022-12-15T18:04:21Z" name="captureStatus" finished-at="2022-12-15T18:04:21Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateOrgRateLimitUI status=SUCCESS method=OrgLevelPoliciesTest.validateOrgRateLimitUI()[pri:1, instance:com.informatica.tests.OrgLevelPoliciesTest@42bc14c1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureStatus -->
        <test-method is-config="true" signature="register(java.lang.reflect.Method)[pri:0, instance:com.informatica.tests.OrgLevelPoliciesTest@42bc14c1]" started-at="2022-12-15T18:04:21Z" name="register" finished-at="2022-12-15T18:04:21Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.informatica.tests.OrgLevelPoliciesTest.deleteDefaultOrgRateLimitTier()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- register -->
        <test-method signature="deleteDefaultOrgRateLimitTier()[pri:2, instance:com.informatica.tests.OrgLevelPoliciesTest@42bc14c1]" started-at="2022-12-15T18:04:21Z" name="deleteDefaultOrgRateLimitTier" finished-at="2022-12-15T18:04:24Z" duration-ms="3443" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteDefaultOrgRateLimitTier -->
        <test-method is-config="true" signature="captureStatus(org.testng.ITestResult)[pri:0, instance:com.informatica.tests.OrgLevelPoliciesTest@42bc14c1]" started-at="2022-12-15T18:04:24Z" name="captureStatus" finished-at="2022-12-15T18:04:24Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=deleteDefaultOrgRateLimitTier status=SUCCESS method=OrgLevelPoliciesTest.deleteDefaultOrgRateLimitTier()[pri:2, instance:com.informatica.tests.OrgLevelPoliciesTest@42bc14c1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureStatus -->
        <test-method is-config="true" signature="register(java.lang.reflect.Method)[pri:0, instance:com.informatica.tests.OrgLevelPoliciesTest@42bc14c1]" started-at="2022-12-15T18:04:24Z" name="register" finished-at="2022-12-15T18:04:24Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.informatica.tests.OrgLevelPoliciesTest.validateIpFilterPoliciesRetained()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- register -->
        <test-method signature="validateIpFilterPoliciesRetained()[pri:3, instance:com.informatica.tests.OrgLevelPoliciesTest@42bc14c1]" started-at="2022-12-15T18:04:24Z" name="validateIpFilterPoliciesRetained" finished-at="2022-12-15T18:04:24Z" duration-ms="99" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateIpFilterPoliciesRetained -->
        <test-method is-config="true" signature="captureStatus(org.testng.ITestResult)[pri:0, instance:com.informatica.tests.OrgLevelPoliciesTest@42bc14c1]" started-at="2022-12-15T18:04:24Z" name="captureStatus" finished-at="2022-12-15T18:04:24Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateIpFilterPoliciesRetained status=SUCCESS method=OrgLevelPoliciesTest.validateIpFilterPoliciesRetained()[pri:3, instance:com.informatica.tests.OrgLevelPoliciesTest@42bc14c1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureStatus -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.informatica.tests.OrgLevelPoliciesTest@42bc14c1]" started-at="2022-12-15T18:04:24Z" name="tearDown" finished-at="2022-12-15T18:04:25Z" duration-ms="504" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:com.informatica.tests.OrgLevelPoliciesTest@42bc14c1]" started-at="2022-12-15T18:09:35Z" name="cleanUp" finished-at="2022-12-15T18:09:35Z" duration-ms="268" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
      </class> <!-- com.informatica.tests.OrgLevelPoliciesTest -->
    </test> <!-- OrgLevelPolicies -->
    <test started-at="2022-12-15T18:00:22Z" name="APIM_Swagger" finished-at="2022-12-15T18:04:56Z" duration-ms="274167">
      <class name="com.informatica.tests.APIMSwaggerTest">
        <test-method is-config="true" signature="init()[pri:0, instance:com.informatica.tests.APIMSwaggerTest@6e4566f1]" started-at="2022-12-15T18:00:22Z" name="init" finished-at="2022-12-15T18:00:47Z" duration-ms="24975" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method is-config="true" signature="register(java.lang.reflect.Method)[pri:0, instance:com.informatica.tests.APIMSwaggerTest@6e4566f1]" started-at="2022-12-15T18:00:47Z" name="register" finished-at="2022-12-15T18:00:47Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.informatica.tests.APIMSwaggerTest.validateAnonAPISwaggerURL(java.lang.Object)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- register -->
        <test-method signature="validateAnonAPISwaggerURL(java.lang.Object)[pri:0, instance:com.informatica.tests.APIMSwaggerTest@6e4566f1]" started-at="2022-12-15T18:00:47Z" name="validateAnonAPISwaggerURL" data-provider="getData" finished-at="2022-12-15T18:01:47Z" duration-ms="60187" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Additional Details=ManagedAPIName=APIM_Automation_Generic_Anon1, TestMethodName=validateAnonAPISwaggerURL, Description=Test case to verify Swagger URL for Anonymous API, IsRun=Yes, JIRA_KEY=APIM-1492}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Exception while validating Anonymous API Swagger URL]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Exception while validating Anonymous API Swagger URL
at org.testng.Assert.fail(Assert.java:96)
at com.informatica.tests.APIMSwaggerTest.validateAnonAPISwaggerURL(APIMSwaggerTest.java:215)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateAnonAPISwaggerURL -->
        <test-method is-config="true" signature="captureStatus(org.testng.ITestResult)[pri:0, instance:com.informatica.tests.APIMSwaggerTest@6e4566f1]" started-at="2022-12-15T18:01:47Z" name="captureStatus" finished-at="2022-12-15T18:01:48Z" duration-ms="219" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateAnonAPISwaggerURL status=FAILURE method=APIMSwaggerTest.validateAnonAPISwaggerURL(java.lang.Object)[pri:0, instance:com.informatica.tests.APIMSwaggerTest@6e4566f1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureStatus -->
        <test-method is-config="true" signature="register(java.lang.reflect.Method)[pri:0, instance:com.informatica.tests.APIMSwaggerTest@6e4566f1]" started-at="2022-12-15T18:01:48Z" name="register" finished-at="2022-12-15T18:01:48Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.informatica.tests.APIMSwaggerTest.validateAnonAPISwagger(java.lang.Object)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- register -->
        <test-method signature="validateAnonAPISwagger(java.lang.Object)[pri:1, instance:com.informatica.tests.APIMSwaggerTest@6e4566f1]" started-at="2022-12-15T18:01:48Z" name="validateAnonAPISwagger" data-provider="getData" finished-at="2022-12-15T18:02:48Z" duration-ms="60010" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Additional Details=ManagedAPIName=APIM_Automation_Generic_Anon1,ResponseBody={}, TestMethodName=validateAnonAPISwagger, Description=Test case to verify Swagger tab functionality for Anonymous API, IsRun=Yes, JIRA_KEY=APIM-1490}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Exception while validating Anonymous API Swagger tab]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Exception while validating Anonymous API Swagger tab
at org.testng.Assert.fail(Assert.java:96)
at com.informatica.tests.APIMSwaggerTest.validateAnonAPISwagger(APIMSwaggerTest.java:109)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateAnonAPISwagger -->
        <test-method is-config="true" signature="captureStatus(org.testng.ITestResult)[pri:0, instance:com.informatica.tests.APIMSwaggerTest@6e4566f1]" started-at="2022-12-15T18:02:48Z" name="captureStatus" finished-at="2022-12-15T18:02:48Z" duration-ms="279" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateAnonAPISwagger status=FAILURE method=APIMSwaggerTest.validateAnonAPISwagger(java.lang.Object)[pri:1, instance:com.informatica.tests.APIMSwaggerTest@6e4566f1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureStatus -->
        <test-method is-config="true" signature="register(java.lang.reflect.Method)[pri:0, instance:com.informatica.tests.APIMSwaggerTest@6e4566f1]" started-at="2022-12-15T18:02:48Z" name="register" finished-at="2022-12-15T18:02:48Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.informatica.tests.APIMSwaggerTest.validateBasicAPISwaggerURL(java.lang.Object)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- register -->
        <test-method signature="validateBasicAPISwaggerURL(java.lang.Object)[pri:2, instance:com.informatica.tests.APIMSwaggerTest@6e4566f1]" started-at="2022-12-15T18:02:48Z" name="validateBasicAPISwaggerURL" data-provider="getData" finished-at="2022-12-15T18:03:48Z" duration-ms="60184" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Additional Details=ManagedAPIName=APIM_Automation_Generic_Basic, TestMethodName=validateBasicAPISwaggerURL, Description=Test case to verify Swagger URL for Basic API, IsRun=Yes, JIRA_KEY=APIM-1493}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Exception while validating Basic API Swagger URL]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Exception while validating Basic API Swagger URL
at org.testng.Assert.fail(Assert.java:96)
at com.informatica.tests.APIMSwaggerTest.validateBasicAPISwaggerURL(APIMSwaggerTest.java:255)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateBasicAPISwaggerURL -->
        <test-method is-config="true" signature="captureStatus(org.testng.ITestResult)[pri:0, instance:com.informatica.tests.APIMSwaggerTest@6e4566f1]" started-at="2022-12-15T18:03:48Z" name="captureStatus" finished-at="2022-12-15T18:03:48Z" duration-ms="341" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateBasicAPISwaggerURL status=FAILURE method=APIMSwaggerTest.validateBasicAPISwaggerURL(java.lang.Object)[pri:2, instance:com.informatica.tests.APIMSwaggerTest@6e4566f1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureStatus -->
        <test-method is-config="true" signature="register(java.lang.reflect.Method)[pri:0, instance:com.informatica.tests.APIMSwaggerTest@6e4566f1]" started-at="2022-12-15T18:03:48Z" name="register" finished-at="2022-12-15T18:03:48Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.informatica.tests.APIMSwaggerTest.validateBasicAPISwagger(java.lang.Object)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- register -->
        <test-method signature="validateBasicAPISwagger(java.lang.Object)[pri:3, instance:com.informatica.tests.APIMSwaggerTest@6e4566f1]" started-at="2022-12-15T18:03:48Z" name="validateBasicAPISwagger" data-provider="getData" finished-at="2022-12-15T18:04:48Z" duration-ms="60024" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Additional Details=ManagedAPIName=APIM_Automation_Generic_Basic,ResponseBody={
  "Name": "Testing"
}
, TestMethodName=validateBasicAPISwagger, Description=Test case to verify Swagger tab functionality for Basic API, IsRun=Yes, JIRA_KEY=APIM-1491}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Exception while validating Basic API Swagger tab]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Exception while validating Basic API Swagger tab
at org.testng.Assert.fail(Assert.java:96)
at com.informatica.tests.APIMSwaggerTest.validateBasicAPISwagger(APIMSwaggerTest.java:174)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateBasicAPISwagger -->
        <test-method is-config="true" signature="captureStatus(org.testng.ITestResult)[pri:0, instance:com.informatica.tests.APIMSwaggerTest@6e4566f1]" started-at="2022-12-15T18:04:48Z" name="captureStatus" finished-at="2022-12-15T18:04:49Z" duration-ms="230" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateBasicAPISwagger status=FAILURE method=APIMSwaggerTest.validateBasicAPISwagger(java.lang.Object)[pri:3, instance:com.informatica.tests.APIMSwaggerTest@6e4566f1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureStatus -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.informatica.tests.APIMSwaggerTest@6e4566f1]" started-at="2022-12-15T18:04:49Z" name="tearDown" finished-at="2022-12-15T18:04:56Z" duration-ms="7712" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.informatica.tests.APIMSwaggerTest -->
    </test> <!-- APIM_Swagger -->
    <test started-at="2022-12-15T18:02:34Z" name="RateLimit" finished-at="2022-12-15T18:05:33Z" duration-ms="178879">
      <class name="com.informatica.tests.RateLimitTest">
        <test-method is-config="true" signature="init()[pri:0, instance:com.informatica.tests.RateLimitTest@24111ef1]" started-at="2022-12-15T18:02:34Z" name="init" finished-at="2022-12-15T18:03:04Z" duration-ms="29644" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method signature="verifyRateLimitPolicyAppliedToAnonymousApi(java.lang.Object)[pri:1, instance:com.informatica.tests.RateLimitTest@24111ef1]" started-at="2022-12-15T18:03:04Z" name="verifyRateLimitPolicyAppliedToAnonymousApi" description="APIM_UI_Sanity_TC005_Verify the rate limit policy applied to an anonymous API" data-provider="getData" finished-at="2022-12-15T18:03:32Z" duration-ms="27998" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Additional Details=Processname=APIM_Automation_Anon1, TestMethodName=verifyRateLimitPolicyAppliedToAnonymousApi, Description=APIM_UI_Sanity_TC005_Verify the rate limit policy applied to an anonymous API, IsRun=Yes, JIRA_KEY=APIM-1478}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyRateLimitPolicyAppliedToAnonymousApi -->
        <test-method is-config="true" signature="register(java.lang.reflect.Method)[pri:0, instance:com.informatica.tests.RateLimitTest@24111ef1]" started-at="2022-12-15T18:03:04Z" name="register" finished-at="2022-12-15T18:03:04Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.informatica.tests.RateLimitTest.verifyRateLimitPolicyAppliedToAnonymousApi(java.lang.Object) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- register -->
        <test-method is-config="true" signature="captureStatus(org.testng.ITestResult)[pri:0, instance:com.informatica.tests.RateLimitTest@24111ef1]" started-at="2022-12-15T18:03:32Z" name="captureStatus" finished-at="2022-12-15T18:03:32Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyRateLimitPolicyAppliedToAnonymousApi status=SUCCESS method=RateLimitTest.verifyRateLimitPolicyAppliedToAnonymousApi(java.lang.Object)[pri:1, instance:com.informatica.tests.RateLimitTest@24111ef1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureStatus -->
        <test-method is-config="true" signature="register(java.lang.reflect.Method)[pri:0, instance:com.informatica.tests.RateLimitTest@24111ef1]" started-at="2022-12-15T18:03:32Z" name="register" finished-at="2022-12-15T18:03:32Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.informatica.tests.RateLimitTest.verifyRateLimitPolicyAppliedToBasicApi(java.lang.Object) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- register -->
        <test-method signature="verifyRateLimitPolicyAppliedToBasicApi(java.lang.Object)[pri:2, instance:com.informatica.tests.RateLimitTest@24111ef1]" started-at="2022-12-15T18:03:32Z" name="verifyRateLimitPolicyAppliedToBasicApi" description="APIM_UI_Sanity_TC006_Verify the rate limit policy applied to a Basic API" data-provider="getData" finished-at="2022-12-15T18:05:32Z" duration-ms="120264" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Additional Details=Processname=APIM_Automation_Basic, TestMethodName=verifyRateLimitPolicyAppliedToBasicApi, Description=APIM_UI_Sanity_TC006_Verify the rate limit policy applied to a Basic API, IsRun=Yes, JIRA_KEY=APIM-1479}]]>
              </value>
            </param>
          </params>
          <exception class="com.microsoft.playwright.TimeoutError">
            <message>
              <![CDATA[Error {
  message='Timeout 60000ms exceeded.
=========================== logs ===========================
waiting for selector "//*[@id="root"]/div/div[2]/main/div[3]/div/div[1]/ul/button[2]"
============================================================
  name='TimeoutError
  stack='TimeoutError: Timeout 60000ms exceeded.
=========================== logs ===========================
waiting for selector "//*[@id="root"]/div/div[2]/main/div[3]/div/div[1]/ul/button[2]"
============================================================
    at ProgressController.run (C:\Users\jashaik\AppData\Local\Temp\playwright-java-5376866736254237440\package\lib\server\progress.js:96:26)
    at Frame.click (C:\Users\jashaik\AppData\Local\Temp\playwright-java-5376866736254237440\package\lib\server\frames.js:1111:23)
    at FrameDispatcher.click (C:\Users\jashaik\AppData\Local\Temp\playwright-java-5376866736254237440\package\lib\dispatchers\frameDispatcher.js:166:30)
    at DispatcherConnection.dispatch (C:\Users\jashaik\AppData\Local\Temp\playwright-java-5376866736254237440\package\lib\dispatchers\dispatcher.js:352:46)
}]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.microsoft.playwright.TimeoutError: Error {
  message='Timeout 60000ms exceeded.
=========================== logs ===========================
waiting for selector "//*[@id="root"]/div/div[2]/main/div[3]/div/div[1]/ul/button[2]"
============================================================
  name='TimeoutError
  stack='TimeoutError: Timeout 60000ms exceeded.
=========================== logs ===========================
waiting for selector "//*[@id="root"]/div/div[2]/main/div[3]/div/div[1]/ul/button[2]"
============================================================
    at ProgressController.run (C:\Users\jashaik\AppData\Local\Temp\playwright-java-5376866736254237440\package\lib\server\progress.js:96:26)
    at Frame.click (C:\Users\jashaik\AppData\Local\Temp\playwright-java-5376866736254237440\package\lib\server\frames.js:1111:23)
    at FrameDispatcher.click (C:\Users\jashaik\AppData\Local\Temp\playwright-java-5376866736254237440\package\lib\dispatchers\frameDispatcher.js:166:30)
    at DispatcherConnection.dispatch (C:\Users\jashaik\AppData\Local\Temp\playwright-java-5376866736254237440\package\lib\dispatchers\dispatcher.js:352:46)
}
at com.microsoft.playwright.impl.WaitableResult.get(WaitableResult.java:52)
at com.microsoft.playwright.impl.ChannelOwner.runUntil(ChannelOwner.java:103)
at com.microsoft.playwright.impl.Connection.sendMessage(Connection.java:105)
at com.microsoft.playwright.impl.ChannelOwner.sendMessage(ChannelOwner.java:94)
at com.microsoft.playwright.impl.FrameImpl.clickImpl(FrameImpl.java:255)
at com.microsoft.playwright.impl.FrameImpl.lambda$click$9(FrameImpl.java:246)
at com.microsoft.playwright.impl.LoggingSupport.lambda$withLogging$0(LoggingSupport.java:36)
at com.microsoft.playwright.impl.LoggingSupport.withLogging(LoggingSupport.java:47)
at com.microsoft.playwright.impl.ChannelOwner.withLogging(ChannelOwner.java:79)
at com.microsoft.playwright.impl.LoggingSupport.withLogging(LoggingSupport.java:35)
at com.microsoft.playwright.impl.FrameImpl.click(FrameImpl.java:246)
at com.microsoft.playwright.impl.LocatorImpl.click(LocatorImpl.java:100)
at com.microsoft.playwright.Locator.click(Locator.java:1648)
at com.informatica.pages.ApiDetailsPolicyPage.clickPoliciesTab(ApiDetailsPolicyPage.java:32)
at com.informatica.tests.RateLimitTest.verifyRateLimitPolicy(RateLimitTest.java:134)
at com.informatica.tests.RateLimitTest.verifyRateLimitPolicyAppliedToBasicApi(RateLimitTest.java:184)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: com.microsoft.playwright.TimeoutError: Error {
  message='Timeout 60000ms exceeded.
=========================== logs ===========================
waiting for selector "//*[@id="root"]/div/div[2]/main/div[3]/div/div[1]/ul/button[2]"
============================================================
  name='TimeoutError
  stack='TimeoutError: Timeout 60000ms exceeded.
=========================== logs ===========================
waiting for selector "//*[@id="root"]/div/div[2]/main/div[3]/div/div[1]/ul/button[2]"
============================================================
    at ProgressController.run (C:\Users\jashaik\AppData\Local\Temp\playwright-java-5376866736254237440\package\lib\server\progress.js:96:26)
    at Frame.click (C:\Users\jashaik\AppData\Local\Temp\playwright-java-5376866736254237440\package\lib\server\frames.js:1111:23)
    at FrameDispatcher.click (C:\Users\jashaik\AppData\Local\Temp\playwright-java-5376866736254237440\package\lib\dispatchers\frameDispatcher.js:166:30)
    at DispatcherConnection.dispatch (C:\Users\jashaik\AppData\Local\Temp\playwright-java-5376866736254237440\package\lib\dispatchers\dispatcher.js:352:46)
}
at com.microsoft.playwright.impl.Connection.dispatch(Connection.java:181)
at com.microsoft.playwright.impl.Connection.processOneMessage(Connection.java:163)
at com.microsoft.playwright.impl.ChannelOwner.runUntil(ChannelOwner.java:101)
... 34 more
]]>
            </full-stacktrace>
          </exception> <!-- com.microsoft.playwright.TimeoutError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyRateLimitPolicyAppliedToBasicApi -->
        <test-method is-config="true" signature="captureStatus(org.testng.ITestResult)[pri:0, instance:com.informatica.tests.RateLimitTest@24111ef1]" started-at="2022-12-15T18:05:32Z" name="captureStatus" finished-at="2022-12-15T18:05:33Z" duration-ms="260" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyRateLimitPolicyAppliedToBasicApi status=FAILURE method=RateLimitTest.verifyRateLimitPolicyAppliedToBasicApi(java.lang.Object)[pri:2, instance:com.informatica.tests.RateLimitTest@24111ef1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureStatus -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.informatica.tests.RateLimitTest@24111ef1]" started-at="2022-12-15T18:05:33Z" name="tearDown" finished-at="2022-12-15T18:05:33Z" duration-ms="708" status="FAIL">
          <exception class="com.microsoft.playwright.PlaywrightException">
            <message>
              <![CDATA[Failed to read message from driver, pipe closed.]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.microsoft.playwright.PlaywrightException: Failed to read message from driver, pipe closed.
at com.microsoft.playwright.impl.PipeTransport.poll(PipeTransport.java:75)
at com.microsoft.playwright.impl.Connection.processOneMessage(Connection.java:157)
at com.microsoft.playwright.impl.ChannelOwner.runUntil(ChannelOwner.java:101)
at com.microsoft.playwright.impl.Connection.sendMessage(Connection.java:105)
at com.microsoft.playwright.impl.ChannelOwner.sendMessage(ChannelOwner.java:94)
at com.microsoft.playwright.impl.ChannelOwner.sendMessage(ChannelOwner.java:90)
at com.microsoft.playwright.impl.BrowserContextImpl.closeImpl(BrowserContextImpl.java:196)
at com.microsoft.playwright.impl.BrowserContextImpl.lambda$close$1(BrowserContextImpl.java:170)
at com.microsoft.playwright.impl.LoggingSupport.lambda$withLogging$0(LoggingSupport.java:36)
at com.microsoft.playwright.impl.LoggingSupport.withLogging(LoggingSupport.java:47)
at com.microsoft.playwright.impl.ChannelOwner.withLogging(ChannelOwner.java:79)
at com.microsoft.playwright.impl.LoggingSupport.withLogging(LoggingSupport.java:35)
at com.microsoft.playwright.impl.BrowserContextImpl.close(BrowserContextImpl.java:170)
at com.informatica.tests.BaseTest.tearDown(BaseTest.java:294)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:458)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
at org.testng.TestRunner.afterRun(TestRunner.java:725)
at org.testng.TestRunner.run(TestRunner.java:509)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.io.EOFException
at com.microsoft.playwright.impl.ReaderThread.readIntLE(PipeTransport.java:110)
at com.microsoft.playwright.impl.ReaderThread.readMessage(PipeTransport.java:139)
at com.microsoft.playwright.impl.ReaderThread.run(PipeTransport.java:125)
]]>
            </full-stacktrace>
          </exception> <!-- com.microsoft.playwright.PlaywrightException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.informatica.tests.RateLimitTest -->
    </test> <!-- RateLimit -->
    <test started-at="2022-12-15T17:56:52Z" name="Managed_API_Page" finished-at="2022-12-15T18:09:35Z" duration-ms="763059">
      <class name="com.informatica.tests.managedAPITest">
        <test-method is-config="true" signature="init()[pri:0, instance:com.informatica.tests.managedAPITest@2f62ea70]" started-at="2022-12-15T17:56:52Z" name="init" finished-at="2022-12-15T17:57:29Z" duration-ms="37937" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method is-config="true" signature="register(java.lang.reflect.Method)[pri:0, instance:com.informatica.tests.managedAPITest@2f62ea70]" started-at="2022-12-15T17:57:29Z" name="register" finished-at="2022-12-15T17:57:29Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.informatica.tests.managedAPITest.accessAnonManagedAPI(java.lang.Object)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- register -->
        <test-method signature="accessAnonManagedAPI(java.lang.Object)[pri:1, instance:com.informatica.tests.managedAPITest@2f62ea70]" started-at="2022-12-15T17:57:29Z" name="accessAnonManagedAPI" data-provider="getData" finished-at="2022-12-15T17:58:30Z" duration-ms="60108" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Additional Details=ManagedAPIName=APIM_Automation_Generic_Anon1, TestMethodName=accessAnonManagedAPI, Description=Test case to validate API URL of Anonymous API, IsRun=Yes, JIRA_KEY=APIM-1476}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Exception while validating AccessAnonManagedAPi]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Exception while validating AccessAnonManagedAPi
at org.testng.Assert.fail(Assert.java:96)
at com.informatica.tests.managedAPITest.accessAnonManagedAPI(managedAPITest.java:121)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- accessAnonManagedAPI -->
        <test-method is-config="true" signature="captureStatus(org.testng.ITestResult)[pri:0, instance:com.informatica.tests.managedAPITest@2f62ea70]" started-at="2022-12-15T17:58:30Z" name="captureStatus" finished-at="2022-12-15T17:58:30Z" duration-ms="517" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=accessAnonManagedAPI status=FAILURE method=managedAPITest.accessAnonManagedAPI(java.lang.Object)[pri:1, instance:com.informatica.tests.managedAPITest@2f62ea70] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureStatus -->
        <test-method is-config="true" signature="register(java.lang.reflect.Method)[pri:0, instance:com.informatica.tests.managedAPITest@2f62ea70]" started-at="2022-12-15T17:58:30Z" name="register" finished-at="2022-12-15T17:58:30Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.informatica.tests.managedAPITest.accessBasicManagedAPI(java.lang.Object)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- register -->
        <test-method signature="accessBasicManagedAPI(java.lang.Object)[pri:2, instance:com.informatica.tests.managedAPITest@2f62ea70]" started-at="2022-12-15T17:58:30Z" name="accessBasicManagedAPI" data-provider="getData" finished-at="2022-12-15T17:59:47Z" duration-ms="76641" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Additional Details=ManagedAPIName=APIM_Automation_Generic_Basic, TestMethodName=accessBasicManagedAPI, Description=Test case to validate API URL of Basic API, IsRun=Yes, JIRA_KEY=APIM-1477}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Exception while validating AccessBasicManagedAPI]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Exception while validating AccessBasicManagedAPI
at org.testng.Assert.fail(Assert.java:96)
at com.informatica.tests.managedAPITest.accessBasicManagedAPI(managedAPITest.java:158)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- accessBasicManagedAPI -->
        <test-method is-config="true" signature="captureStatus(org.testng.ITestResult)[pri:0, instance:com.informatica.tests.managedAPITest@2f62ea70]" started-at="2022-12-15T17:59:47Z" name="captureStatus" finished-at="2022-12-15T17:59:47Z" duration-ms="322" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=accessBasicManagedAPI status=FAILURE method=managedAPITest.accessBasicManagedAPI(java.lang.Object)[pri:2, instance:com.informatica.tests.managedAPITest@2f62ea70] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureStatus -->
        <test-method is-config="true" signature="register(java.lang.reflect.Method)[pri:0, instance:com.informatica.tests.managedAPITest@2f62ea70]" started-at="2022-12-15T17:59:47Z" name="register" finished-at="2022-12-15T17:59:47Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.informatica.tests.managedAPITest.validateWSDLURL(java.lang.Object)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- register -->
        <test-method signature="validateWSDLURL(java.lang.Object)[pri:3, instance:com.informatica.tests.managedAPITest@2f62ea70]" started-at="2022-12-15T17:59:47Z" name="validateWSDLURL" data-provider="getData" finished-at="2022-12-15T18:00:47Z" duration-ms="60264" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Additional Details=ManagedAPIName=APIM_Automation_Generic_Anon1, TestMethodName=validateWSDLURL, Description=Test case to validate WSDL URL, IsRun=Yes, JIRA_KEY=APIM-1494}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Exception while validating WSDL URL]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Exception while validating WSDL URL
at org.testng.Assert.fail(Assert.java:96)
at com.informatica.tests.managedAPITest.validateWSDLURL(managedAPITest.java:199)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateWSDLURL -->
        <test-method is-config="true" signature="captureStatus(org.testng.ITestResult)[pri:0, instance:com.informatica.tests.managedAPITest@2f62ea70]" started-at="2022-12-15T18:00:47Z" name="captureStatus" finished-at="2022-12-15T18:00:48Z" duration-ms="234" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateWSDLURL status=FAILURE method=managedAPITest.validateWSDLURL(java.lang.Object)[pri:3, instance:com.informatica.tests.managedAPITest@2f62ea70] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureStatus -->
        <test-method is-config="true" signature="register(java.lang.reflect.Method)[pri:0, instance:com.informatica.tests.managedAPITest@2f62ea70]" started-at="2022-12-15T18:00:48Z" name="register" finished-at="2022-12-15T18:00:48Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.informatica.tests.managedAPITest.ClickOnEnablePrivacyPolicyWarning(java.lang.Object)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- register -->
        <test-method signature="ClickOnEnablePrivacyPolicyWarning(java.lang.Object)[pri:4, instance:com.informatica.tests.managedAPITest@2f62ea70]" started-at="2022-12-15T18:00:48Z" name="ClickOnEnablePrivacyPolicyWarning" data-provider="getData" finished-at="2022-12-15T18:05:09Z" duration-ms="261460" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Additional Details=APIName=APIM_Automation_AnonPrivacy,Version=1.0.0,Protocol=REST, TestMethodName=ClickOnEnablePrivacyPolicyWarning, Description=Test case to enable privacy policy warning, IsRun=Yes, JIRA_KEY=APIM-1485}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Exception while clicking ClickOnEnablePrivacyPolicyWarningValidation]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Exception while clicking ClickOnEnablePrivacyPolicyWarningValidation
at org.testng.Assert.fail(Assert.java:96)
at com.informatica.tests.managedAPITest.ClickOnEnablePrivacyPolicyWarning(managedAPITest.java:272)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClickOnEnablePrivacyPolicyWarning -->
        <test-method is-config="true" signature="captureStatus(org.testng.ITestResult)[pri:0, instance:com.informatica.tests.managedAPITest@2f62ea70]" started-at="2022-12-15T18:05:09Z" name="captureStatus" finished-at="2022-12-15T18:05:09Z" duration-ms="258" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ClickOnEnablePrivacyPolicyWarning status=FAILURE method=managedAPITest.ClickOnEnablePrivacyPolicyWarning(java.lang.Object)[pri:4, instance:com.informatica.tests.managedAPITest@2f62ea70] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureStatus -->
        <test-method is-config="true" signature="register(java.lang.reflect.Method)[pri:0, instance:com.informatica.tests.managedAPITest@2f62ea70]" started-at="2022-12-15T18:05:09Z" name="register" finished-at="2022-12-15T18:05:09Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.informatica.tests.managedAPITest.ClickOnEnablePrivacyPolicyBlock(java.lang.Object)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- register -->
        <test-method signature="ClickOnEnablePrivacyPolicyBlock(java.lang.Object)[pri:5, instance:com.informatica.tests.managedAPITest@2f62ea70]" started-at="2022-12-15T18:05:09Z" name="ClickOnEnablePrivacyPolicyBlock" data-provider="getData" finished-at="2022-12-15T18:09:34Z" duration-ms="264965" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Additional Details=APIName=APIM_Automation_AnonPrivacy,Version=1.0.0,Protocol=REST, TestMethodName=ClickOnEnablePrivacyPolicyBlock, Description=Test case to enable privacy policy block, IsRun=Yes, JIRA_KEY=APIM-1486}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClickOnEnablePrivacyPolicyBlock -->
        <test-method is-config="true" signature="captureStatus(org.testng.ITestResult)[pri:0, instance:com.informatica.tests.managedAPITest@2f62ea70]" started-at="2022-12-15T18:09:34Z" name="captureStatus" finished-at="2022-12-15T18:09:34Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ClickOnEnablePrivacyPolicyBlock status=SUCCESS method=managedAPITest.ClickOnEnablePrivacyPolicyBlock(java.lang.Object)[pri:5, instance:com.informatica.tests.managedAPITest@2f62ea70] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureStatus -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.informatica.tests.managedAPITest@2f62ea70]" started-at="2022-12-15T18:09:34Z" name="tearDown" finished-at="2022-12-15T18:09:35Z" duration-ms="344" status="FAIL">
          <exception class="com.microsoft.playwright.PlaywrightException">
            <message>
              <![CDATA[Failed to read message from driver, pipe closed.]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.microsoft.playwright.PlaywrightException: Failed to read message from driver, pipe closed.
at com.microsoft.playwright.impl.PipeTransport.poll(PipeTransport.java:75)
at com.microsoft.playwright.impl.Connection.processOneMessage(Connection.java:157)
at com.microsoft.playwright.impl.ChannelOwner.runUntil(ChannelOwner.java:101)
at com.microsoft.playwright.impl.Connection.sendMessage(Connection.java:105)
at com.microsoft.playwright.impl.ChannelOwner.sendMessage(ChannelOwner.java:94)
at com.microsoft.playwright.impl.ChannelOwner.sendMessage(ChannelOwner.java:90)
at com.microsoft.playwright.impl.BrowserContextImpl.closeImpl(BrowserContextImpl.java:196)
at com.microsoft.playwright.impl.BrowserContextImpl.lambda$close$1(BrowserContextImpl.java:170)
at com.microsoft.playwright.impl.LoggingSupport.lambda$withLogging$0(LoggingSupport.java:36)
at com.microsoft.playwright.impl.LoggingSupport.withLogging(LoggingSupport.java:47)
at com.microsoft.playwright.impl.ChannelOwner.withLogging(ChannelOwner.java:79)
at com.microsoft.playwright.impl.LoggingSupport.withLogging(LoggingSupport.java:35)
at com.microsoft.playwright.impl.BrowserContextImpl.close(BrowserContextImpl.java:170)
at com.informatica.tests.BaseTest.tearDown(BaseTest.java:294)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:458)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
at org.testng.TestRunner.afterRun(TestRunner.java:725)
at org.testng.TestRunner.run(TestRunner.java:509)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.io.EOFException
at com.microsoft.playwright.impl.ReaderThread.readIntLE(PipeTransport.java:110)
at com.microsoft.playwright.impl.ReaderThread.readMessage(PipeTransport.java:139)
at com.microsoft.playwright.impl.ReaderThread.run(PipeTransport.java:125)
]]>
            </full-stacktrace>
          </exception> <!-- com.microsoft.playwright.PlaywrightException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.informatica.tests.managedAPITest -->
    </test> <!-- Managed_API_Page -->
  </suite> <!-- APIM Tests -->
</testng-results>
